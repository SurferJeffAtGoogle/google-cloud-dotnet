// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/irm/v1alpha2/incidents.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Irm.V1Alpha2 {

  /// <summary>Holder for reflection information generated from google/cloud/irm/v1alpha2/incidents.proto</summary>
  public static partial class IncidentsReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/irm/v1alpha2/incidents.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static IncidentsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cilnb29nbGUvY2xvdWQvaXJtL3YxYWxwaGEyL2luY2lkZW50cy5wcm90bxIZ",
            "Z29vZ2xlLmNsb3VkLmlybS52MWFscGhhMhocZ29vZ2xlL2FwaS9hbm5vdGF0",
            "aW9ucy5wcm90bxopZ29vZ2xlL21vbml0b3JpbmcvdjMvbWV0cmljX3NlcnZp",
            "Y2UucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8iMgoE",
            "VXNlchIRCgd1c2VyX2lkGAEgASgJSAASDwoFZW1haWwYAiABKAlIAEIGCgR1",
            "c2VyItACCgZTaWduYWwSDAoEbmFtZRgBIAEoCRIMCgRldGFnGAIgASgJEhAK",
            "CGluY2lkZW50GAMgASgJEi8KC2NyZWF0ZV90aW1lGAQgASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLlRpbWVzdGFtcBIwCgdjcmVhdG9yGAUgASgLMh8uZ29vZ2xl",
            "LmNsb3VkLmlybS52MWFscGhhMi5Vc2VyEg0KBXRpdGxlGAYgASgJEhQKDGNv",
            "bnRlbnRfdHlwZRgHIAEoCRIPCgdjb250ZW50GAggASgJEj0KDHNpZ25hbF9z",
            "dGF0ZRgJIAEoDjInLmdvb2dsZS5jbG91ZC5pcm0udjFhbHBoYTIuU2lnbmFs",
            "LlN0YXRlIkAKBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVEEAASDgoKU1RB",
            "VEVfT1BFThABEhAKDFNUQVRFX0NMT1NFRBACIo0BCgpBbm5vdGF0aW9uEgwK",
            "BG5hbWUYASABKAkSLwoGYXV0aG9yGAIgASgLMh8uZ29vZ2xlLmNsb3VkLmly",
            "bS52MWFscGhhMi5Vc2VyEi8KC2NyZWF0ZV90aW1lGAMgASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLlRpbWVzdGFtcBIPCgdjb250ZW50GAQgASgJIjYKA1RhZxIM",
            "CgRuYW1lGAEgASgJEhQKDGRpc3BsYXlfbmFtZRgCIAEoCRILCgN1cmwYAyAB",
            "KAkikwEKCFN5bm9wc2lzEhQKDGNvbnRlbnRfdHlwZRgBIAEoCRIPCgdjb250",
            "ZW50GAIgASgJEi8KC3VwZGF0ZV90aW1lGAMgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBIvCgZhdXRob3IYBCABKAsyHy5nb29nbGUuY2xvdWQu",
            "aXJtLnYxYWxwaGEyLlVzZXIi1AUKCEluY2lkZW50EgwKBG5hbWUYASABKAkS",
            "DQoFdGl0bGUYAiABKAkSTQoQZXNjYWxhdGlvbl9sZXZlbBgDIAEoDjIzLmdv",
            "b2dsZS5jbG91ZC5pcm0udjFhbHBoYTIuSW5jaWRlbnQuRXNjYWxhdGlvbkxl",
            "dmVsEgwKBGV0YWcYBCABKAkSPgoIc2V2ZXJpdHkYBSABKA4yLC5nb29nbGUu",
            "Y2xvdWQuaXJtLnYxYWxwaGEyLkluY2lkZW50LlNldmVyaXR5EjgKBXN0YWdl",
            "GAYgASgOMikuZ29vZ2xlLmNsb3VkLmlybS52MWFscGhhMi5JbmNpZGVudC5T",
            "dGFnZRIuCgpzdGFydF90aW1lGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBI1CghzeW5vcHNpcxgIIAEoCzIjLmdvb2dsZS5jbG91ZC5pcm0u",
            "djFhbHBoYTIuU3lub3BzaXMiVgoPRXNjYWxhdGlvbkxldmVsEiAKHEVTQ0FM",
            "QVRJT05fTEVWRUxfVU5TUEVDSUZJRUQQABIhCh1FU0NBTEFUSU9OX0xFVkVM",
            "X09SR0FOSVpBVElPThABIo0BCghTZXZlcml0eRIYChRTRVZFUklUWV9VTlNQ",
            "RUNJRklFRBAAEhEKDVNFVkVSSVRZX0hVR0UQARISCg5TRVZFUklUWV9NQUpP",
            "UhACEhMKD1NFVkVSSVRZX01FRElVTRADEhIKDlNFVkVSSVRZX01JTk9SEAQS",
            "FwoTU0VWRVJJVFlfTkVHTElHSUJMRRAFIoQBCgVTdGFnZRIVChFTVEFHRV9V",
            "TlNQRUNJRklFRBAAEhIKDlNUQUdFX0RFVEVDVEVEEAQSEQoNU1RBR0VfVFJJ",
            "QUdFRBABEhMKD1NUQUdFX01JVElHQVRFRBACEhIKDlNUQUdFX1JFU09MVkVE",
            "EAMSFAoQU1RBR0VfRE9DVU1FTlRFRBAFItYCCgxJbmNpZGVudFJvbGUSOgoE",
            "dHlwZRgBIAEoDjIsLmdvb2dsZS5jbG91ZC5pcm0udjFhbHBoYTIuSW5jaWRl",
            "bnRSb2xlLlR5cGUSDQoFdGl0bGUYAiABKAkSEwoLZGVzY3JpcHRpb24YAyAB",
            "KAki5QEKBFR5cGUSFAoQVFlQRV9VTlNQRUNJRklFRBAAEhsKF1RZUEVfSU5D",
            "SURFTlRfQ09NTUFOREVSEAESHAoYVFlQRV9DT01NVU5JQ0FUSU9OU19MRUFE",
            "EAISGAoUVFlQRV9PUEVSQVRJT05TX0xFQUQQAxIuCipUWVBFX0VYVEVSTkFM",
            "X0NVU1RPTUVSX0NPTU1VTklDQVRJT05TX0xFQUQQBBIXChNUWVBFX1BSSU1B",
            "UllfT05DQUxMEAUSGQoVVFlQRV9TRUNPTkRBUllfT05DQUxMEAYSDgoKVFlQ",
            "RV9PVEhFUhAHItoBChZJbmNpZGVudFJvbGVBc3NpZ25tZW50EgwKBG5hbWUY",
            "ASABKAkSDAoEZXRhZxgCIAEoCRI1CgRyb2xlGAMgASgLMicuZ29vZ2xlLmNs",
            "b3VkLmlybS52MWFscGhhMi5JbmNpZGVudFJvbGUSMQoIYXNzaWduZWUYBCAB",
            "KAsyHy5nb29nbGUuY2xvdWQuaXJtLnYxYWxwaGEyLlVzZXISOgoRcHJvcG9z",
            "ZWRfYXNzaWduZWUYBSABKAsyHy5nb29nbGUuY2xvdWQuaXJtLnYxYWxwaGEy",
            "LlVzZXIi8gEKCEFydGlmYWN0EgwKBG5hbWUYASABKAkSFAoMZGlzcGxheV9u",
            "YW1lGAIgASgJEgwKBGV0YWcYAyABKAkSCwoDdXJsGAQgASgJEjYKBHR5cGUY",
            "BSABKA4yKC5nb29nbGUuY2xvdWQuaXJtLnYxYWxwaGEyLkFydGlmYWN0LlR5",
            "cGUibwoEVHlwZRIUChBUWVBFX1VOU1BFQ0lGSUVEEAASDAoIVFlQRV9VUkwQ",
            "ARIOCgpUWVBFX0lTU1VFEAISHgoaVFlQRV9TT1VSQ0VfQ09OVFJPTF9DSEFO",
            "R0UQAxITCg9UWVBFX0pJUkFfSVNTVUUQBCKOAgoUQ29tbXVuaWNhdGlvbkNo",
            "YW5uZWwSRgoFZW1haWwYASABKAsyNS5nb29nbGUuY2xvdWQuaXJtLnYxYWxw",
            "aGEyLkNvbW11bmljYXRpb25DaGFubmVsLkVtYWlsSAASYwoUbm90aWZpY2F0",
            "aW9uX2NoYW5uZWwYAiABKAsyQy5nb29nbGUuY2xvdWQuaXJtLnYxYWxwaGEy",
            "LkNvbW11bmljYXRpb25DaGFubmVsLk5vdGlmaWNhdGlvbkNoYW5uZWxIABoY",
            "CgVFbWFpbBIPCgdhZGRyZXNzGAEgASgJGiMKE05vdGlmaWNhdGlvbkNoYW5u",
            "ZWwSDAoEbmFtZRgBIAEoCUIKCghlbmRwb2ludCKmAwoMU3Vic2NyaXB0aW9u",
            "EgwKBG5hbWUYASABKAkSDAoEZXRhZxgCIAEoCRJNChRzdWJzY3JpcHRpb25f",
            "Y2hhbm5lbBgDIAEoCzIvLmdvb2dsZS5jbG91ZC5pcm0udjFhbHBoYTIuQ29t",
            "bXVuaWNhdGlvbkNoYW5uZWwSRgoLZXZlbnRfdHlwZXMYBCADKA4yMS5nb29n",
            "bGUuY2xvdWQuaXJtLnYxYWxwaGEyLlN1YnNjcmlwdGlvbi5FdmVudFR5cGUi",
            "4gEKCUV2ZW50VHlwZRIaChZFVkVOVF9UWVBFX1VOU1BFQ0lGSUVEEAASGwoX",
            "RVZFTlRfVFlQRV9USVRMRV9DSEFOR0UQARIeChpFVkVOVF9UWVBFX1NZTk9Q",
            "U0lTX0NIQU5HRRACEhsKF0VWRU5UX1RZUEVfU1RBR0VfQ0hBTkdFEAMSHgoa",
            "RVZFTlRfVFlQRV9TRVZFUklUWV9DSEFOR0UQBBIdChlFVkVOVF9UWVBFX0FO",
            "Tk9UQVRJT05fQUREEAUSIAocRVZFTlRfVFlQRV9BTk5PVEFUSU9OX0NIQU5H",
            "RRAGQmgKI2NvbS5nb29nbGUuaXJtLnNlcnZpY2UudjFhbHBoYTIuYXBpUAFa",
            "PGdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvY2xvdWQv",
            "aXJtL3YxYWxwaGEyO2lybfgBAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Cloud.Monitoring.V3.MetricServiceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Irm.V1Alpha2.User), global::Google.Cloud.Irm.V1Alpha2.User.Parser, new[]{ "UserId", "Email" }, new[]{ "User" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Irm.V1Alpha2.Signal), global::Google.Cloud.Irm.V1Alpha2.Signal.Parser, new[]{ "Name", "Etag", "Incident", "CreateTime", "Creator", "Title", "ContentType", "Content", "SignalState" }, null, new[]{ typeof(global::Google.Cloud.Irm.V1Alpha2.Signal.Types.State) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Irm.V1Alpha2.Annotation), global::Google.Cloud.Irm.V1Alpha2.Annotation.Parser, new[]{ "Name", "Author", "CreateTime", "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Irm.V1Alpha2.Tag), global::Google.Cloud.Irm.V1Alpha2.Tag.Parser, new[]{ "Name", "DisplayName", "Url" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Irm.V1Alpha2.Synopsis), global::Google.Cloud.Irm.V1Alpha2.Synopsis.Parser, new[]{ "ContentType", "Content", "UpdateTime", "Author" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Irm.V1Alpha2.Incident), global::Google.Cloud.Irm.V1Alpha2.Incident.Parser, new[]{ "Name", "Title", "EscalationLevel", "Etag", "Severity", "Stage", "StartTime", "Synopsis" }, null, new[]{ typeof(global::Google.Cloud.Irm.V1Alpha2.Incident.Types.EscalationLevel), typeof(global::Google.Cloud.Irm.V1Alpha2.Incident.Types.Severity), typeof(global::Google.Cloud.Irm.V1Alpha2.Incident.Types.Stage) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Irm.V1Alpha2.IncidentRole), global::Google.Cloud.Irm.V1Alpha2.IncidentRole.Parser, new[]{ "Type", "Title", "Description" }, null, new[]{ typeof(global::Google.Cloud.Irm.V1Alpha2.IncidentRole.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Irm.V1Alpha2.IncidentRoleAssignment), global::Google.Cloud.Irm.V1Alpha2.IncidentRoleAssignment.Parser, new[]{ "Name", "Etag", "Role", "Assignee", "ProposedAssignee" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Irm.V1Alpha2.Artifact), global::Google.Cloud.Irm.V1Alpha2.Artifact.Parser, new[]{ "Name", "DisplayName", "Etag", "Url", "Type" }, null, new[]{ typeof(global::Google.Cloud.Irm.V1Alpha2.Artifact.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel), global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Parser, new[]{ "Email", "NotificationChannel" }, new[]{ "Endpoint" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Types.Email), global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Types.Email.Parser, new[]{ "Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Types.NotificationChannel), global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Types.NotificationChannel.Parser, new[]{ "Name" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Irm.V1Alpha2.Subscription), global::Google.Cloud.Irm.V1Alpha2.Subscription.Parser, new[]{ "Name", "Etag", "SubscriptionChannel", "EventTypes" }, null, new[]{ typeof(global::Google.Cloud.Irm.V1Alpha2.Subscription.Types.EventType) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A user of the IRM app.
  /// </summary>
  public sealed partial class User : pb::IMessage<User> {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Irm.V1Alpha2.IncidentsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      switch (other.UserCase) {
        case UserOneofCase.UserId:
          UserId = other.UserId;
          break;
        case UserOneofCase.Email:
          Email = other.Email;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    /// <summary>
    /// Output only. User id that will allow to get additional information from
    /// People API. This field will be populated implicitly if the caller creates
    /// or edits a resource (e.g. posts an annotation).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userCase_ == UserOneofCase.UserId ? (string) user_ : ""; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        userCase_ = UserOneofCase.UserId;
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 2;
    /// <summary>
    /// Email address of the user. This must be associated with a Google account.
    /// This field will be set if the user is explicitly identified (verbatim) by
    /// email address in an API request (potentially sometime in the past). It
    /// will not be populated based on the credentials of a caller of the API.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return userCase_ == UserOneofCase.Email ? (string) user_ : ""; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        userCase_ = UserOneofCase.Email;
      }
    }

    private object user_;
    /// <summary>Enum of possible cases for the "user" oneof.</summary>
    public enum UserOneofCase {
      None = 0,
      UserId = 1,
      Email = 2,
    }
    private UserOneofCase userCase_ = UserOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserOneofCase UserCase {
      get { return userCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUser() {
      userCase_ = UserOneofCase.None;
      user_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Email != other.Email) return false;
      if (UserCase != other.UserCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userCase_ == UserOneofCase.UserId) hash ^= UserId.GetHashCode();
      if (userCase_ == UserOneofCase.Email) hash ^= Email.GetHashCode();
      hash ^= (int) userCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userCase_ == UserOneofCase.UserId) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (userCase_ == UserOneofCase.Email) {
        output.WriteRawTag(18);
        output.WriteString(Email);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userCase_ == UserOneofCase.UserId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (userCase_ == UserOneofCase.Email) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      switch (other.UserCase) {
        case UserOneofCase.UserId:
          UserId = other.UserId;
          break;
        case UserOneofCase.Email:
          Email = other.Email;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            Email = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A signal is a message calling attention to a (potential) incident. An example
  /// is a page based on a Stackdriver Alerting policy.
  /// go/irm-glossary#signal
  /// </summary>
  public sealed partial class Signal : pb::IMessage<Signal> {
    private static readonly pb::MessageParser<Signal> _parser = new pb::MessageParser<Signal>(() => new Signal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Signal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Irm.V1Alpha2.IncidentsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Signal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Signal(Signal other) : this() {
      name_ = other.name_;
      etag_ = other.etag_;
      incident_ = other.incident_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      creator_ = other.creator_ != null ? other.creator_.Clone() : null;
      title_ = other.title_;
      contentType_ = other.contentType_;
      content_ = other.content_;
      signalState_ = other.signalState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Signal Clone() {
      return new Signal(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Resource name of the signal, e.g.
    /// "projects/{project_id}/signals/{signal_id}".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "etag" field.</summary>
    public const int EtagFieldNumber = 2;
    private string etag_ = "";
    /// <summary>
    /// Etag to validate the object is unchanged for a read-modify-write operation.
    /// An empty etag will overwrite other changes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Etag {
      get { return etag_; }
      set {
        etag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "incident" field.</summary>
    public const int IncidentFieldNumber = 3;
    private string incident_ = "";
    /// <summary>
    /// Resource name of the incident this signal is currently assigned to.
    /// May be empty if signal is unassigned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Incident {
      get { return incident_; }
      set {
        incident_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. Time this signal was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "creator" field.</summary>
    public const int CreatorFieldNumber = 5;
    private global::Google.Cloud.Irm.V1Alpha2.User creator_;
    /// <summary>
    /// Output only. The user that created this signal for manually created
    /// signals. Empty if this signal was generated by a system (e.g. an
    /// alerting system).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Irm.V1Alpha2.User Creator {
      get { return creator_; }
      set {
        creator_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 6;
    private string title_ = "";
    /// <summary>
    /// One-line summary of the signal.
    /// Immutable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 7;
    private string contentType_ = "";
    /// <summary>
    /// Content type string, e.g. 'text/plain' or'text/html'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 8;
    private string content_ = "";
    /// <summary>
    /// Full message of the signal.
    /// Immutable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signal_state" field.</summary>
    public const int SignalStateFieldNumber = 9;
    private global::Google.Cloud.Irm.V1Alpha2.Signal.Types.State signalState_ = 0;
    /// <summary>
    /// Output only. The state of this signal.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Irm.V1Alpha2.Signal.Types.State SignalState {
      get { return signalState_; }
      set {
        signalState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Signal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Signal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Etag != other.Etag) return false;
      if (Incident != other.Incident) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(Creator, other.Creator)) return false;
      if (Title != other.Title) return false;
      if (ContentType != other.ContentType) return false;
      if (Content != other.Content) return false;
      if (SignalState != other.SignalState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Etag.Length != 0) hash ^= Etag.GetHashCode();
      if (Incident.Length != 0) hash ^= Incident.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (creator_ != null) hash ^= Creator.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (SignalState != 0) hash ^= SignalState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Etag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Etag);
      }
      if (Incident.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Incident);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (creator_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Creator);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Title);
      }
      if (ContentType.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ContentType);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Content);
      }
      if (SignalState != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) SignalState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Etag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Etag);
      }
      if (Incident.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Incident);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (creator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Creator);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (ContentType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (SignalState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SignalState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Signal other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Etag.Length != 0) {
        Etag = other.Etag;
      }
      if (other.Incident.Length != 0) {
        Incident = other.Incident;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          createTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.creator_ != null) {
        if (creator_ == null) {
          creator_ = new global::Google.Cloud.Irm.V1Alpha2.User();
        }
        Creator.MergeFrom(other.Creator);
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.ContentType.Length != 0) {
        ContentType = other.ContentType;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.SignalState != 0) {
        SignalState = other.SignalState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Etag = input.ReadString();
            break;
          }
          case 26: {
            Incident = input.ReadString();
            break;
          }
          case 34: {
            if (createTime_ == null) {
              createTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(createTime_);
            break;
          }
          case 42: {
            if (creator_ == null) {
              creator_ = new global::Google.Cloud.Irm.V1Alpha2.User();
            }
            input.ReadMessage(creator_);
            break;
          }
          case 50: {
            Title = input.ReadString();
            break;
          }
          case 58: {
            ContentType = input.ReadString();
            break;
          }
          case 66: {
            Content = input.ReadString();
            break;
          }
          case 72: {
            signalState_ = (global::Google.Cloud.Irm.V1Alpha2.Signal.Types.State) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Signal message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Describes whether the alerting condition is still firing.
      /// </summary>
      public enum State {
        /// <summary>
        /// Unspecified
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Firing
        /// </summary>
        [pbr::OriginalName("STATE_OPEN")] Open = 1,
        /// <summary>
        /// Non-firing
        /// </summary>
        [pbr::OriginalName("STATE_CLOSED")] Closed = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// A text annotation by a user.
  /// </summary>
  public sealed partial class Annotation : pb::IMessage<Annotation> {
    private static readonly pb::MessageParser<Annotation> _parser = new pb::MessageParser<Annotation>(() => new Annotation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Annotation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Irm.V1Alpha2.IncidentsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Annotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Annotation(Annotation other) : this() {
      name_ = other.name_;
      author_ = other.author_ != null ? other.author_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Annotation Clone() {
      return new Annotation(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Resource name of the annotation, e.g.
    /// "projects/{project_id}/incidents/{incident_id}/annotations/{annotation_id}".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "author" field.</summary>
    public const int AuthorFieldNumber = 2;
    private global::Google.Cloud.Irm.V1Alpha2.User author_;
    /// <summary>
    /// Output only. Author of the annotation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Irm.V1Alpha2.User Author {
      get { return author_; }
      set {
        author_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. Time the annotation was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 4;
    private string content_ = "";
    /// <summary>
    /// Content of the annotation. Immutable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Annotation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Annotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Author, other.Author)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (author_ != null) hash ^= Author.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (author_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Author);
      }
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (author_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Author);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Annotation other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.author_ != null) {
        if (author_ == null) {
          author_ = new global::Google.Cloud.Irm.V1Alpha2.User();
        }
        Author.MergeFrom(other.Author);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          createTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (author_ == null) {
              author_ = new global::Google.Cloud.Irm.V1Alpha2.User();
            }
            input.ReadMessage(author_);
            break;
          }
          case 26: {
            if (createTime_ == null) {
              createTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(createTime_);
            break;
          }
          case 34: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A tag by a user.
  /// </summary>
  public sealed partial class Tag : pb::IMessage<Tag> {
    private static readonly pb::MessageParser<Tag> _parser = new pb::MessageParser<Tag>(() => new Tag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Irm.V1Alpha2.IncidentsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tag(Tag other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tag Clone() {
      return new Tag(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Resource name of a tag, e.g.,
    /// "projects/{project_id}/incidents/{incident_id}/tags/{tag_id}"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// Display name of the resource (e.g., "cause:rollout"). Immutable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 3;
    private string url_ = "";
    /// <summary>
    /// Output only. For some tags (e.g., "bug:123"), provide a link to the
    /// underlying resource. Optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tag other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Synopsis is a summary of an incident and it contains a textual content,
  /// an author and a last updated timestamp.
  /// </summary>
  public sealed partial class Synopsis : pb::IMessage<Synopsis> {
    private static readonly pb::MessageParser<Synopsis> _parser = new pb::MessageParser<Synopsis>(() => new Synopsis());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Synopsis> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Irm.V1Alpha2.IncidentsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Synopsis() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Synopsis(Synopsis other) : this() {
      contentType_ = other.contentType_;
      content_ = other.content_;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      author_ = other.author_ != null ? other.author_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Synopsis Clone() {
      return new Synopsis(this);
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 1;
    private string contentType_ = "";
    /// <summary>
    /// Content type string, e.g. 'text/plain' or 'text/html'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private string content_ = "";
    /// <summary>
    /// Textual content of the synopsis. It can be plain text or markdown as
    /// indicated by the content_type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Last updated timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "author" field.</summary>
    public const int AuthorFieldNumber = 4;
    private global::Google.Cloud.Irm.V1Alpha2.User author_;
    /// <summary>
    /// Author of the synopsis.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Irm.V1Alpha2.User Author {
      get { return author_; }
      set {
        author_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Synopsis);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Synopsis other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContentType != other.ContentType) return false;
      if (Content != other.Content) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!object.Equals(Author, other.Author)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (author_ != null) hash ^= Author.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContentType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContentType);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateTime);
      }
      if (author_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Author);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContentType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (author_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Author);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Synopsis other) {
      if (other == null) {
        return;
      }
      if (other.ContentType.Length != 0) {
        ContentType = other.ContentType;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          updateTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.author_ != null) {
        if (author_ == null) {
          author_ = new global::Google.Cloud.Irm.V1Alpha2.User();
        }
        Author.MergeFrom(other.Author);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContentType = input.ReadString();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 26: {
            if (updateTime_ == null) {
              updateTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(updateTime_);
            break;
          }
          case 34: {
            if (author_ == null) {
              author_ = new global::Google.Cloud.Irm.V1Alpha2.User();
            }
            input.ReadMessage(author_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Representation of an incident.
  /// </summary>
  public sealed partial class Incident : pb::IMessage<Incident> {
    private static readonly pb::MessageParser<Incident> _parser = new pb::MessageParser<Incident>(() => new Incident());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Incident> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Irm.V1Alpha2.IncidentsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Incident() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Incident(Incident other) : this() {
      name_ = other.name_;
      title_ = other.title_;
      escalationLevel_ = other.escalationLevel_;
      etag_ = other.etag_;
      severity_ = other.severity_;
      stage_ = other.stage_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      synopsis_ = other.synopsis_ != null ? other.synopsis_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Incident Clone() {
      return new Incident(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. Resource name of the incident, e.g.
    /// "projects/{project_id}/incidents/{incident_id}".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    /// <summary>
    /// One-line summary of the incident.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "escalation_level" field.</summary>
    public const int EscalationLevelFieldNumber = 3;
    private global::Google.Cloud.Irm.V1Alpha2.Incident.Types.EscalationLevel escalationLevel_ = 0;
    /// <summary>
    /// Escalation level of the incident.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Irm.V1Alpha2.Incident.Types.EscalationLevel EscalationLevel {
      get { return escalationLevel_; }
      set {
        escalationLevel_ = value;
      }
    }

    /// <summary>Field number for the "etag" field.</summary>
    public const int EtagFieldNumber = 4;
    private string etag_ = "";
    /// <summary>
    /// Etag to validate the object is unchanged for a read-modify-write operation.
    /// An empty etag will overwrite other changes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Etag {
      get { return etag_; }
      set {
        etag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "severity" field.</summary>
    public const int SeverityFieldNumber = 5;
    private global::Google.Cloud.Irm.V1Alpha2.Incident.Types.Severity severity_ = 0;
    /// <summary>
    /// Severity of the incident.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Irm.V1Alpha2.Incident.Types.Severity Severity {
      get { return severity_; }
      set {
        severity_ = value;
      }
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 6;
    private global::Google.Cloud.Irm.V1Alpha2.Incident.Types.Stage stage_ = 0;
    /// <summary>
    /// Stage of the incident.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Irm.V1Alpha2.Incident.Types.Stage Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Output only. Time this incident started. Used to measure the 'elapsed
    /// time'. Start time of an incident is the earliest creation time of any of
    /// its Signals or the create time of the incident if no Signals are assigned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "synopsis" field.</summary>
    public const int SynopsisFieldNumber = 8;
    private global::Google.Cloud.Irm.V1Alpha2.Synopsis synopsis_;
    /// <summary>
    /// Output only. Synopsis of this incident.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Irm.V1Alpha2.Synopsis Synopsis {
      get { return synopsis_; }
      set {
        synopsis_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Incident);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Incident other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Title != other.Title) return false;
      if (EscalationLevel != other.EscalationLevel) return false;
      if (Etag != other.Etag) return false;
      if (Severity != other.Severity) return false;
      if (Stage != other.Stage) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(Synopsis, other.Synopsis)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (EscalationLevel != 0) hash ^= EscalationLevel.GetHashCode();
      if (Etag.Length != 0) hash ^= Etag.GetHashCode();
      if (Severity != 0) hash ^= Severity.GetHashCode();
      if (Stage != 0) hash ^= Stage.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (synopsis_ != null) hash ^= Synopsis.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (EscalationLevel != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) EscalationLevel);
      }
      if (Etag.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Etag);
      }
      if (Severity != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Severity);
      }
      if (Stage != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Stage);
      }
      if (startTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StartTime);
      }
      if (synopsis_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Synopsis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (EscalationLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EscalationLevel);
      }
      if (Etag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Etag);
      }
      if (Severity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Severity);
      }
      if (Stage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Stage);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (synopsis_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Synopsis);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Incident other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.EscalationLevel != 0) {
        EscalationLevel = other.EscalationLevel;
      }
      if (other.Etag.Length != 0) {
        Etag = other.Etag;
      }
      if (other.Severity != 0) {
        Severity = other.Severity;
      }
      if (other.Stage != 0) {
        Stage = other.Stage;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          startTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.synopsis_ != null) {
        if (synopsis_ == null) {
          synopsis_ = new global::Google.Cloud.Irm.V1Alpha2.Synopsis();
        }
        Synopsis.MergeFrom(other.Synopsis);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 24: {
            escalationLevel_ = (global::Google.Cloud.Irm.V1Alpha2.Incident.Types.EscalationLevel) input.ReadEnum();
            break;
          }
          case 34: {
            Etag = input.ReadString();
            break;
          }
          case 40: {
            severity_ = (global::Google.Cloud.Irm.V1Alpha2.Incident.Types.Severity) input.ReadEnum();
            break;
          }
          case 48: {
            stage_ = (global::Google.Cloud.Irm.V1Alpha2.Incident.Types.Stage) input.ReadEnum();
            break;
          }
          case 58: {
            if (startTime_ == null) {
              startTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(startTime_);
            break;
          }
          case 66: {
            if (synopsis_ == null) {
              synopsis_ = new global::Google.Cloud.Irm.V1Alpha2.Synopsis();
            }
            input.ReadMessage(synopsis_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Incident message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Specifies the escalation level of this incident, within the IRM protocol
      /// for handling incidents.
      /// </summary>
      public enum EscalationLevel {
        /// <summary>
        /// The incident has not been escalated. This is the value used by all new
        /// and legacy incidents.
        /// </summary>
        [pbr::OriginalName("ESCALATION_LEVEL_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The incident has been escalated to the organizational level.
        /// </summary>
        [pbr::OriginalName("ESCALATION_LEVEL_ORGANIZATION")] Organization = 1,
      }

      /// <summary>
      /// Severity of an incident.
      /// </summary>
      public enum Severity {
        /// <summary>
        /// Severity is not specified.
        /// </summary>
        [pbr::OriginalName("SEVERITY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Huge incident.
        /// </summary>
        [pbr::OriginalName("SEVERITY_HUGE")] Huge = 1,
        /// <summary>
        /// Major incident.
        /// </summary>
        [pbr::OriginalName("SEVERITY_MAJOR")] Major = 2,
        /// <summary>
        /// Medium incident.
        /// </summary>
        [pbr::OriginalName("SEVERITY_MEDIUM")] Medium = 3,
        /// <summary>
        /// Minor incident.
        /// </summary>
        [pbr::OriginalName("SEVERITY_MINOR")] Minor = 4,
        /// <summary>
        /// Negligible incident.
        /// </summary>
        [pbr::OriginalName("SEVERITY_NEGLIGIBLE")] Negligible = 5,
      }

      /// <summary>
      /// Stage of an incident.
      /// </summary>
      public enum Stage {
        /// <summary>
        /// This is the default value if no stage has been specified.
        /// Note: The caller of the API should set the stage to DETECTED.
        /// </summary>
        [pbr::OriginalName("STAGE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The incident has been detected. This is the initial stage of a new
        /// incident.
        /// Note: The caller still has to set the stage manually.
        /// </summary>
        [pbr::OriginalName("STAGE_DETECTED")] Detected = 4,
        /// <summary>
        /// This incident has been formally characterized.
        /// </summary>
        [pbr::OriginalName("STAGE_TRIAGED")] Triaged = 1,
        /// <summary>
        /// This incident has been mitigated, i.e. does not affect the service level
        /// anymore.
        /// </summary>
        [pbr::OriginalName("STAGE_MITIGATED")] Mitigated = 2,
        /// <summary>
        /// This incident has been fully resolved, i.e. there are no immediate
        /// follow-up tasks.
        /// </summary>
        [pbr::OriginalName("STAGE_RESOLVED")] Resolved = 3,
        /// <summary>
        /// Postmortem for the incident was written.
        /// </summary>
        [pbr::OriginalName("STAGE_DOCUMENTED")] Documented = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// Describes a role that can be assigned to an incident.
  /// </summary>
  public sealed partial class IncidentRole : pb::IMessage<IncidentRole> {
    private static readonly pb::MessageParser<IncidentRole> _parser = new pb::MessageParser<IncidentRole>(() => new IncidentRole());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IncidentRole> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Irm.V1Alpha2.IncidentsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncidentRole() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncidentRole(IncidentRole other) : this() {
      type_ = other.type_;
      title_ = other.title_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncidentRole Clone() {
      return new IncidentRole(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Google.Cloud.Irm.V1Alpha2.IncidentRole.Types.Type type_ = 0;
    /// <summary>
    /// The type of role. The role type is immutable in role assignments. Each role
    /// type can only be used once per incident, except for TYPE_OTHER.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Irm.V1Alpha2.IncidentRole.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    /// <summary>
    /// Output only unless TYPE_OTHER is used. Title of the role. For TYPE_OTHER,
    /// must be unique within an incident.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Output only unless TYPE_OTHER is used. Description of the role.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IncidentRole);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IncidentRole other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Title != other.Title) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IncidentRole other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Google.Cloud.Irm.V1Alpha2.IncidentRole.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the IncidentRole message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// List of possible roles.
      /// </summary>
      public enum Type {
        /// <summary>
        /// The role is unspecified.
        /// </summary>
        [pbr::OriginalName("TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Incident Commander: Manages response plan, near-term and long-term
        /// objectives, establishes priorities, and delegates tasks as needed.
        /// </summary>
        [pbr::OriginalName("TYPE_INCIDENT_COMMANDER")] IncidentCommander = 1,
        /// <summary>
        /// Communications Lead: Keeps everybody outside and within the response team
        /// informed.
        /// </summary>
        [pbr::OriginalName("TYPE_COMMUNICATIONS_LEAD")] CommunicationsLead = 2,
        /// <summary>
        /// Operations Lead: Figures out what to do, and gets it done.
        /// </summary>
        [pbr::OriginalName("TYPE_OPERATIONS_LEAD")] OperationsLead = 3,
        /// <summary>
        /// External Customer Communications Lead: Responsible for communicating
        /// incident details to customers/public.
        /// </summary>
        [pbr::OriginalName("TYPE_EXTERNAL_CUSTOMER_COMMUNICATIONS_LEAD")] ExternalCustomerCommunicationsLead = 4,
        /// <summary>
        /// Primary Oncall: Responds to the initial page and handles all
        /// responsibilities for pre-escalated incidents.
        /// </summary>
        [pbr::OriginalName("TYPE_PRIMARY_ONCALL")] PrimaryOncall = 5,
        /// <summary>
        /// Secondary Oncall: Helps the primary oncall if necessary; mostly useful
        /// for pre-escalated incidents.
        /// </summary>
        [pbr::OriginalName("TYPE_SECONDARY_ONCALL")] SecondaryOncall = 6,
        /// <summary>
        /// User-specified roles. One example is a Planning Lead, who keeps track of
        /// the incident. Another is an assistant Incident Commander.
        /// </summary>
        [pbr::OriginalName("TYPE_OTHER")] Other = 7,
      }

    }
    #endregion

  }

  /// <summary>
  /// Stores the assignee of a role as well as the proposed next assignee.
  /// </summary>
  public sealed partial class IncidentRoleAssignment : pb::IMessage<IncidentRoleAssignment> {
    private static readonly pb::MessageParser<IncidentRoleAssignment> _parser = new pb::MessageParser<IncidentRoleAssignment>(() => new IncidentRoleAssignment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IncidentRoleAssignment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Irm.V1Alpha2.IncidentsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncidentRoleAssignment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncidentRoleAssignment(IncidentRoleAssignment other) : this() {
      name_ = other.name_;
      etag_ = other.etag_;
      role_ = other.role_ != null ? other.role_.Clone() : null;
      assignee_ = other.assignee_ != null ? other.assignee_.Clone() : null;
      proposedAssignee_ = other.proposedAssignee_ != null ? other.proposedAssignee_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncidentRoleAssignment Clone() {
      return new IncidentRoleAssignment(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. Resource name such as
    /// "projects/{project_id}/incidents/{incident_id}/role_assignments/{role_id}".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "etag" field.</summary>
    public const int EtagFieldNumber = 2;
    private string etag_ = "";
    /// <summary>
    /// Output only. Etag for this version of the resource. Must be specified in
    /// update requests and match the current version in storage. Must not be
    /// modified by the client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Etag {
      get { return etag_; }
      set {
        etag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 3;
    private global::Google.Cloud.Irm.V1Alpha2.IncidentRole role_;
    /// <summary>
    /// The role that is or will be assigned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Irm.V1Alpha2.IncidentRole Role {
      get { return role_; }
      set {
        role_ = value;
      }
    }

    /// <summary>Field number for the "assignee" field.</summary>
    public const int AssigneeFieldNumber = 4;
    private global::Google.Cloud.Irm.V1Alpha2.User assignee_;
    /// <summary>
    /// The user this role is assigned to. This field can only be directly set
    /// during creation request. Subsequent updates are done via the
    /// IncidentRoleHandover methods.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Irm.V1Alpha2.User Assignee {
      get { return assignee_; }
      set {
        assignee_ = value;
      }
    }

    /// <summary>Field number for the "proposed_assignee" field.</summary>
    public const int ProposedAssigneeFieldNumber = 5;
    private global::Google.Cloud.Irm.V1Alpha2.User proposedAssignee_;
    /// <summary>
    /// The recipient of a requested role handoff. This field can only be directly
    /// set during creation request. Subsequent updates are done via the
    /// IncidentRoleHandover methods.
    ///
    /// `assignee` is always the current role-holder, and `proposed_assignee` is
    /// used to track unfinished assignments and handoffs. Let's say Bob assigns
    /// Alice to a role. Then the fields are:
    ///   `assignee`: nil, `proposed_assignee`: Alice
    /// If Alice accepts, then the fields are:
    ///   `assignee`: Alice, `proposed_assignee`: nil
    /// If she cancels, then the RoleAssignment is deleted.
    /// Let's say Alice has the role. Then the fields are:
    ///   `assignee`: Alice, `proposed_assignee`: nil
    /// If Alice is hit by a bus and Bob requests Carol to take over, then the
    /// fields are:
    ///   `assignee`: Alice, `proposed_assignee`: Carol
    /// After Carol accepts the handover, the fields are:
    ///   `assignee`: Carol, `proposed_assignee`: nil
    /// Or if Carol refuses the handover, the fields are:
    ///   `assignee`: Alice, `proposed_assignee`: nil
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Irm.V1Alpha2.User ProposedAssignee {
      get { return proposedAssignee_; }
      set {
        proposedAssignee_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IncidentRoleAssignment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IncidentRoleAssignment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Etag != other.Etag) return false;
      if (!object.Equals(Role, other.Role)) return false;
      if (!object.Equals(Assignee, other.Assignee)) return false;
      if (!object.Equals(ProposedAssignee, other.ProposedAssignee)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Etag.Length != 0) hash ^= Etag.GetHashCode();
      if (role_ != null) hash ^= Role.GetHashCode();
      if (assignee_ != null) hash ^= Assignee.GetHashCode();
      if (proposedAssignee_ != null) hash ^= ProposedAssignee.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Etag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Etag);
      }
      if (role_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Role);
      }
      if (assignee_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Assignee);
      }
      if (proposedAssignee_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ProposedAssignee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Etag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Etag);
      }
      if (role_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Role);
      }
      if (assignee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Assignee);
      }
      if (proposedAssignee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProposedAssignee);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IncidentRoleAssignment other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Etag.Length != 0) {
        Etag = other.Etag;
      }
      if (other.role_ != null) {
        if (role_ == null) {
          role_ = new global::Google.Cloud.Irm.V1Alpha2.IncidentRole();
        }
        Role.MergeFrom(other.Role);
      }
      if (other.assignee_ != null) {
        if (assignee_ == null) {
          assignee_ = new global::Google.Cloud.Irm.V1Alpha2.User();
        }
        Assignee.MergeFrom(other.Assignee);
      }
      if (other.proposedAssignee_ != null) {
        if (proposedAssignee_ == null) {
          proposedAssignee_ = new global::Google.Cloud.Irm.V1Alpha2.User();
        }
        ProposedAssignee.MergeFrom(other.ProposedAssignee);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Etag = input.ReadString();
            break;
          }
          case 26: {
            if (role_ == null) {
              role_ = new global::Google.Cloud.Irm.V1Alpha2.IncidentRole();
            }
            input.ReadMessage(role_);
            break;
          }
          case 34: {
            if (assignee_ == null) {
              assignee_ = new global::Google.Cloud.Irm.V1Alpha2.User();
            }
            input.ReadMessage(assignee_);
            break;
          }
          case 42: {
            if (proposedAssignee_ == null) {
              proposedAssignee_ = new global::Google.Cloud.Irm.V1Alpha2.User();
            }
            input.ReadMessage(proposedAssignee_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// External artifact associated to an incident.
  /// </summary>
  public sealed partial class Artifact : pb::IMessage<Artifact> {
    private static readonly pb::MessageParser<Artifact> _parser = new pb::MessageParser<Artifact>(() => new Artifact());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Artifact> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Irm.V1Alpha2.IncidentsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Artifact() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Artifact(Artifact other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      etag_ = other.etag_;
      url_ = other.url_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Artifact Clone() {
      return new Artifact(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. Resource name such as
    /// "projects/{project_id}/incidents/{incident_id}/artifacts/{artifact_id}".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// User provided name of an artifact.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "etag" field.</summary>
    public const int EtagFieldNumber = 3;
    private string etag_ = "";
    /// <summary>
    /// Output only. Etag for this version of the resource. Must be specified in
    /// update requests and match the current version in storage. Must not be
    /// modified by the client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Etag {
      get { return etag_; }
      set {
        etag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 4;
    private string url_ = "";
    /// <summary>
    /// URL to access the artifact.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::Google.Cloud.Irm.V1Alpha2.Artifact.Types.Type type_ = 0;
    /// <summary>
    /// Type of this artifact.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Irm.V1Alpha2.Artifact.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Artifact);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Artifact other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Etag != other.Etag) return false;
      if (Url != other.Url) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Etag.Length != 0) hash ^= Etag.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (Etag.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Etag);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Url);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Etag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Etag);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Artifact other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Etag.Length != 0) {
        Etag = other.Etag;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            Etag = input.ReadString();
            break;
          }
          case 34: {
            Url = input.ReadString();
            break;
          }
          case 40: {
            type_ = (global::Google.Cloud.Irm.V1Alpha2.Artifact.Types.Type) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Artifact message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Possible types of an artifact.
      /// </summary>
      public enum Type {
        /// <summary>
        /// External type is unspecified.
        /// </summary>
        [pbr::OriginalName("TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// URL.
        /// </summary>
        [pbr::OriginalName("TYPE_URL")] Url = 1,
        /// <summary>
        /// An issue.
        /// </summary>
        [pbr::OriginalName("TYPE_ISSUE")] Issue = 2,
        /// <summary>
        /// A source control change.
        /// </summary>
        [pbr::OriginalName("TYPE_SOURCE_CONTROL_CHANGE")] SourceControlChange = 3,
        /// <summary>
        /// A JIRA issue.
        /// </summary>
        [pbr::OriginalName("TYPE_JIRA_ISSUE")] JiraIssue = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Communication Channels are mechanisms used to receive notifications
  /// about changes to incidents.
  /// </summary>
  public sealed partial class CommunicationChannel : pb::IMessage<CommunicationChannel> {
    private static readonly pb::MessageParser<CommunicationChannel> _parser = new pb::MessageParser<CommunicationChannel>(() => new CommunicationChannel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommunicationChannel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Irm.V1Alpha2.IncidentsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommunicationChannel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommunicationChannel(CommunicationChannel other) : this() {
      switch (other.EndpointCase) {
        case EndpointOneofCase.Email:
          Email = other.Email.Clone();
          break;
        case EndpointOneofCase.NotificationChannel:
          NotificationChannel = other.NotificationChannel.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommunicationChannel Clone() {
      return new CommunicationChannel(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    /// <summary>
    /// Messages will be delivered via email.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Types.Email Email {
      get { return endpointCase_ == EndpointOneofCase.Email ? (global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Types.Email) endpoint_ : null; }
      set {
        endpoint_ = value;
        endpointCase_ = value == null ? EndpointOneofCase.None : EndpointOneofCase.Email;
      }
    }

    /// <summary>Field number for the "notification_channel" field.</summary>
    public const int NotificationChannelFieldNumber = 2;
    /// <summary>
    /// Messages will be delivered via a Stackdriver notification channel.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Types.NotificationChannel NotificationChannel {
      get { return endpointCase_ == EndpointOneofCase.NotificationChannel ? (global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Types.NotificationChannel) endpoint_ : null; }
      set {
        endpoint_ = value;
        endpointCase_ = value == null ? EndpointOneofCase.None : EndpointOneofCase.NotificationChannel;
      }
    }

    private object endpoint_;
    /// <summary>Enum of possible cases for the "endpoint" oneof.</summary>
    public enum EndpointOneofCase {
      None = 0,
      Email = 1,
      NotificationChannel = 2,
    }
    private EndpointOneofCase endpointCase_ = EndpointOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndpointOneofCase EndpointCase {
      get { return endpointCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEndpoint() {
      endpointCase_ = EndpointOneofCase.None;
      endpoint_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommunicationChannel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommunicationChannel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Email, other.Email)) return false;
      if (!object.Equals(NotificationChannel, other.NotificationChannel)) return false;
      if (EndpointCase != other.EndpointCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (endpointCase_ == EndpointOneofCase.Email) hash ^= Email.GetHashCode();
      if (endpointCase_ == EndpointOneofCase.NotificationChannel) hash ^= NotificationChannel.GetHashCode();
      hash ^= (int) endpointCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (endpointCase_ == EndpointOneofCase.Email) {
        output.WriteRawTag(10);
        output.WriteMessage(Email);
      }
      if (endpointCase_ == EndpointOneofCase.NotificationChannel) {
        output.WriteRawTag(18);
        output.WriteMessage(NotificationChannel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (endpointCase_ == EndpointOneofCase.Email) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Email);
      }
      if (endpointCase_ == EndpointOneofCase.NotificationChannel) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotificationChannel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommunicationChannel other) {
      if (other == null) {
        return;
      }
      switch (other.EndpointCase) {
        case EndpointOneofCase.Email:
          if (Email == null) {
            Email = new global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Types.Email();
          }
          Email.MergeFrom(other.Email);
          break;
        case EndpointOneofCase.NotificationChannel:
          if (NotificationChannel == null) {
            NotificationChannel = new global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Types.NotificationChannel();
          }
          NotificationChannel.MergeFrom(other.NotificationChannel);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Types.Email subBuilder = new global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Types.Email();
            if (endpointCase_ == EndpointOneofCase.Email) {
              subBuilder.MergeFrom(Email);
            }
            input.ReadMessage(subBuilder);
            Email = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Types.NotificationChannel subBuilder = new global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Types.NotificationChannel();
            if (endpointCase_ == EndpointOneofCase.NotificationChannel) {
              subBuilder.MergeFrom(NotificationChannel);
            }
            input.ReadMessage(subBuilder);
            NotificationChannel = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CommunicationChannel message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A communication channel that delivers messages to an email address.
      /// </summary>
      public sealed partial class Email : pb::IMessage<Email> {
        private static readonly pb::MessageParser<Email> _parser = new pb::MessageParser<Email>(() => new Email());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Email> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Email() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Email(Email other) : this() {
          address_ = other.address_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Email Clone() {
          return new Email(this);
        }

        /// <summary>Field number for the "address" field.</summary>
        public const int AddressFieldNumber = 1;
        private string address_ = "";
        /// <summary>
        /// The email address, e.g. "user@example.com".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Address {
          get { return address_; }
          set {
            address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Email);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Email other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Address != other.Address) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Address.Length != 0) hash ^= Address.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Address.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Address);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Address.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Email other) {
          if (other == null) {
            return;
          }
          if (other.Address.Length != 0) {
            Address = other.Address;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Address = input.ReadString();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// A communication channel that delivers messages to a Stackdriver
      /// notification channel.
      /// </summary>
      public sealed partial class NotificationChannel : pb::IMessage<NotificationChannel> {
        private static readonly pb::MessageParser<NotificationChannel> _parser = new pb::MessageParser<NotificationChannel>(() => new NotificationChannel());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NotificationChannel> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NotificationChannel() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NotificationChannel(NotificationChannel other) : this() {
          name_ = other.name_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NotificationChannel Clone() {
          return new NotificationChannel(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        /// <summary>
        /// Stackdriver notification channel name.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NotificationChannel);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NotificationChannel other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NotificationChannel other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// A subscription allows users to get notifications about changes to
  /// an incident.
  /// </summary>
  public sealed partial class Subscription : pb::IMessage<Subscription> {
    private static readonly pb::MessageParser<Subscription> _parser = new pb::MessageParser<Subscription>(() => new Subscription());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Subscription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Irm.V1Alpha2.IncidentsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscription(Subscription other) : this() {
      name_ = other.name_;
      etag_ = other.etag_;
      subscriptionChannel_ = other.subscriptionChannel_ != null ? other.subscriptionChannel_.Clone() : null;
      eventTypes_ = other.eventTypes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscription Clone() {
      return new Subscription(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. Resource name such as
    /// "projects/{project_id}/incidents/{incident_id}/subscriptions/{subscription_id}".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "etag" field.</summary>
    public const int EtagFieldNumber = 2;
    private string etag_ = "";
    /// <summary>
    /// Output only. Etag for this version of the resource. Must be specified in
    /// update requests and match the current version in storage. Must not be
    /// modified by the client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Etag {
      get { return etag_; }
      set {
        etag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subscription_channel" field.</summary>
    public const int SubscriptionChannelFieldNumber = 3;
    private global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel subscriptionChannel_;
    /// <summary>
    /// A communications channel to send subscription messages to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel SubscriptionChannel {
      get { return subscriptionChannel_; }
      set {
        subscriptionChannel_ = value;
      }
    }

    /// <summary>Field number for the "event_types" field.</summary>
    public const int EventTypesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Irm.V1Alpha2.Subscription.Types.EventType> _repeated_eventTypes_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::Google.Cloud.Irm.V1Alpha2.Subscription.Types.EventType) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Irm.V1Alpha2.Subscription.Types.EventType> eventTypes_ = new pbc::RepeatedField<global::Google.Cloud.Irm.V1Alpha2.Subscription.Types.EventType>();
    /// <summary>
    /// Types of events this subscription receives notifications for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Irm.V1Alpha2.Subscription.Types.EventType> EventTypes {
      get { return eventTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Subscription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Subscription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Etag != other.Etag) return false;
      if (!object.Equals(SubscriptionChannel, other.SubscriptionChannel)) return false;
      if(!eventTypes_.Equals(other.eventTypes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Etag.Length != 0) hash ^= Etag.GetHashCode();
      if (subscriptionChannel_ != null) hash ^= SubscriptionChannel.GetHashCode();
      hash ^= eventTypes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Etag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Etag);
      }
      if (subscriptionChannel_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubscriptionChannel);
      }
      eventTypes_.WriteTo(output, _repeated_eventTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Etag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Etag);
      }
      if (subscriptionChannel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscriptionChannel);
      }
      size += eventTypes_.CalculateSize(_repeated_eventTypes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Subscription other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Etag.Length != 0) {
        Etag = other.Etag;
      }
      if (other.subscriptionChannel_ != null) {
        if (subscriptionChannel_ == null) {
          subscriptionChannel_ = new global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel();
        }
        SubscriptionChannel.MergeFrom(other.SubscriptionChannel);
      }
      eventTypes_.Add(other.eventTypes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Etag = input.ReadString();
            break;
          }
          case 26: {
            if (subscriptionChannel_ == null) {
              subscriptionChannel_ = new global::Google.Cloud.Irm.V1Alpha2.CommunicationChannel();
            }
            input.ReadMessage(subscriptionChannel_);
            break;
          }
          case 34:
          case 32: {
            eventTypes_.AddEntriesFrom(input, _repeated_eventTypes_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Subscription message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Types of changes that users can subscribe to in an incident.
      /// </summary>
      public enum EventType {
        /// <summary>
        /// An event_type that's not specified is an error.
        /// </summary>
        [pbr::OriginalName("EVENT_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The incident's title has changed.
        /// </summary>
        [pbr::OriginalName("EVENT_TYPE_TITLE_CHANGE")] TitleChange = 1,
        /// <summary>
        /// The incident's synopsis has changed.
        /// </summary>
        [pbr::OriginalName("EVENT_TYPE_SYNOPSIS_CHANGE")] SynopsisChange = 2,
        /// <summary>
        /// The incident's stage has changed.
        /// </summary>
        [pbr::OriginalName("EVENT_TYPE_STAGE_CHANGE")] StageChange = 3,
        /// <summary>
        /// The incident's severity has changed.
        /// </summary>
        [pbr::OriginalName("EVENT_TYPE_SEVERITY_CHANGE")] SeverityChange = 4,
        /// <summary>
        /// A new annotation has been added to the incident.
        /// </summary>
        [pbr::OriginalName("EVENT_TYPE_ANNOTATION_ADD")] AnnotationAdd = 5,
        /// <summary>
        /// An annotation has been modified.
        /// </summary>
        [pbr::OriginalName("EVENT_TYPE_ANNOTATION_CHANGE")] AnnotationChange = 6,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
