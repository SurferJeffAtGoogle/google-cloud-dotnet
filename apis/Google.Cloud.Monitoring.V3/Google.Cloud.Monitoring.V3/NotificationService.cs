// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/notification_service.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Monitoring.V3 {

  /// <summary>Holder for reflection information generated from google/monitoring/v3/notification_service.proto</summary>
  public static partial class NotificationServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/monitoring/v3/notification_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NotificationServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9nb29nbGUvbW9uaXRvcmluZy92My9ub3RpZmljYXRpb25fc2VydmljZS5w",
            "cm90bxIUZ29vZ2xlLm1vbml0b3JpbmcudjMaHGdvb2dsZS9hcGkvYW5ub3Rh",
            "dGlvbnMucHJvdG8aJ2dvb2dsZS9tb25pdG9yaW5nL3YzL25vdGlmaWNhdGlv",
            "bi5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3RvGiBnb29nbGUv",
            "cHJvdG9idWYvZmllbGRfbWFzay5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3Rp",
            "bWVzdGFtcC5wcm90byJgCilMaXN0Tm90aWZpY2F0aW9uQ2hhbm5lbERlc2Ny",
            "aXB0b3JzUmVxdWVzdBIMCgRuYW1lGAQgASgJEhEKCXBhZ2Vfc2l6ZRgCIAEo",
            "BRISCgpwYWdlX3Rva2VuGAMgASgJIpcBCipMaXN0Tm90aWZpY2F0aW9uQ2hh",
            "bm5lbERlc2NyaXB0b3JzUmVzcG9uc2USUAoTY2hhbm5lbF9kZXNjcmlwdG9y",
            "cxgBIAMoCzIzLmdvb2dsZS5tb25pdG9yaW5nLnYzLk5vdGlmaWNhdGlvbkNo",
            "YW5uZWxEZXNjcmlwdG9yEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSI3CidH",
            "ZXROb3RpZmljYXRpb25DaGFubmVsRGVzY3JpcHRvclJlcXVlc3QSDAoEbmFt",
            "ZRgDIAEoCSJ5CiBDcmVhdGVOb3RpZmljYXRpb25DaGFubmVsUmVxdWVzdBIM",
            "CgRuYW1lGAMgASgJEkcKFG5vdGlmaWNhdGlvbl9jaGFubmVsGAIgASgLMiku",
            "Z29vZ2xlLm1vbml0b3JpbmcudjMuTm90aWZpY2F0aW9uQ2hhbm5lbCJ4Ch9M",
            "aXN0Tm90aWZpY2F0aW9uQ2hhbm5lbHNSZXF1ZXN0EgwKBG5hbWUYBSABKAkS",
            "DgoGZmlsdGVyGAYgASgJEhAKCG9yZGVyX2J5GAcgASgJEhEKCXBhZ2Vfc2l6",
            "ZRgDIAEoBRISCgpwYWdlX3Rva2VuGAQgASgJIoUBCiBMaXN0Tm90aWZpY2F0",
            "aW9uQ2hhbm5lbHNSZXNwb25zZRJIChVub3RpZmljYXRpb25fY2hhbm5lbHMY",
            "AyADKAsyKS5nb29nbGUubW9uaXRvcmluZy52My5Ob3RpZmljYXRpb25DaGFu",
            "bmVsEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSItCh1HZXROb3RpZmljYXRp",
            "b25DaGFubmVsUmVxdWVzdBIMCgRuYW1lGAMgASgJIpwBCiBVcGRhdGVOb3Rp",
            "ZmljYXRpb25DaGFubmVsUmVxdWVzdBIvCgt1cGRhdGVfbWFzaxgCIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2sSRwoUbm90aWZpY2F0aW9uX2No",
            "YW5uZWwYAyABKAsyKS5nb29nbGUubW9uaXRvcmluZy52My5Ob3RpZmljYXRp",
            "b25DaGFubmVsIj8KIERlbGV0ZU5vdGlmaWNhdGlvbkNoYW5uZWxSZXF1ZXN0",
            "EgwKBG5hbWUYAyABKAkSDQoFZm9yY2UYBSABKAgynwsKGk5vdGlmaWNhdGlv",
            "bkNoYW5uZWxTZXJ2aWNlEuUBCiJMaXN0Tm90aWZpY2F0aW9uQ2hhbm5lbERl",
            "c2NyaXB0b3JzEj8uZ29vZ2xlLm1vbml0b3JpbmcudjMuTGlzdE5vdGlmaWNh",
            "dGlvbkNoYW5uZWxEZXNjcmlwdG9yc1JlcXVlc3QaQC5nb29nbGUubW9uaXRv",
            "cmluZy52My5MaXN0Tm90aWZpY2F0aW9uQ2hhbm5lbERlc2NyaXB0b3JzUmVz",
            "cG9uc2UiPILT5JMCNhI0L3YzL3tuYW1lPXByb2plY3RzLyp9L25vdGlmaWNh",
            "dGlvbkNoYW5uZWxEZXNjcmlwdG9ycxLWAQogR2V0Tm90aWZpY2F0aW9uQ2hh",
            "bm5lbERlc2NyaXB0b3ISPS5nb29nbGUubW9uaXRvcmluZy52My5HZXROb3Rp",
            "ZmljYXRpb25DaGFubmVsRGVzY3JpcHRvclJlcXVlc3QaMy5nb29nbGUubW9u",
            "aXRvcmluZy52My5Ob3RpZmljYXRpb25DaGFubmVsRGVzY3JpcHRvciI+gtPk",
            "kwI4EjYvdjMve25hbWU9cHJvamVjdHMvKi9ub3RpZmljYXRpb25DaGFubmVs",
            "RGVzY3JpcHRvcnMvKn0SvQEKGExpc3ROb3RpZmljYXRpb25DaGFubmVscxI1",
            "Lmdvb2dsZS5tb25pdG9yaW5nLnYzLkxpc3ROb3RpZmljYXRpb25DaGFubmVs",
            "c1JlcXVlc3QaNi5nb29nbGUubW9uaXRvcmluZy52My5MaXN0Tm90aWZpY2F0",
            "aW9uQ2hhbm5lbHNSZXNwb25zZSIygtPkkwIsEiovdjMve25hbWU9cHJvamVj",
            "dHMvKn0vbm90aWZpY2F0aW9uQ2hhbm5lbHMSrgEKFkdldE5vdGlmaWNhdGlv",
            "bkNoYW5uZWwSMy5nb29nbGUubW9uaXRvcmluZy52My5HZXROb3RpZmljYXRp",
            "b25DaGFubmVsUmVxdWVzdBopLmdvb2dsZS5tb25pdG9yaW5nLnYzLk5vdGlm",
            "aWNhdGlvbkNoYW5uZWwiNILT5JMCLhIsL3YzL3tuYW1lPXByb2plY3RzLyov",
            "bm90aWZpY2F0aW9uQ2hhbm5lbHMvKn0SyAEKGUNyZWF0ZU5vdGlmaWNhdGlv",
            "bkNoYW5uZWwSNi5nb29nbGUubW9uaXRvcmluZy52My5DcmVhdGVOb3RpZmlj",
            "YXRpb25DaGFubmVsUmVxdWVzdBopLmdvb2dsZS5tb25pdG9yaW5nLnYzLk5v",
            "dGlmaWNhdGlvbkNoYW5uZWwiSILT5JMCQiIqL3YzL3tuYW1lPXByb2plY3Rz",
            "Lyp9L25vdGlmaWNhdGlvbkNoYW5uZWxzOhRub3RpZmljYXRpb25fY2hhbm5l",
            "bBLfAQoZVXBkYXRlTm90aWZpY2F0aW9uQ2hhbm5lbBI2Lmdvb2dsZS5tb25p",
            "dG9yaW5nLnYzLlVwZGF0ZU5vdGlmaWNhdGlvbkNoYW5uZWxSZXF1ZXN0Giku",
            "Z29vZ2xlLm1vbml0b3JpbmcudjMuTm90aWZpY2F0aW9uQ2hhbm5lbCJfgtPk",
            "kwJZMkEvdjMve25vdGlmaWNhdGlvbl9jaGFubmVsLm5hbWU9cHJvamVjdHMv",
            "Ki9ub3RpZmljYXRpb25DaGFubmVscy8qfToUbm90aWZpY2F0aW9uX2NoYW5u",
            "ZWwSoQEKGURlbGV0ZU5vdGlmaWNhdGlvbkNoYW5uZWwSNi5nb29nbGUubW9u",
            "aXRvcmluZy52My5EZWxldGVOb3RpZmljYXRpb25DaGFubmVsUmVxdWVzdBoW",
            "Lmdvb2dsZS5wcm90b2J1Zi5FbXB0eSI0gtPkkwIuKiwvdjMve25hbWU9cHJv",
            "amVjdHMvKi9ub3RpZmljYXRpb25DaGFubmVscy8qfUKTAQoYY29tLmdvb2ds",
            "ZS5tb25pdG9yaW5nLnYzQhhOb3RpZmljYXRpb25TZXJ2aWNlUHJvdG9QAVo+",
            "Z29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9tb25pdG9y",
            "aW5nL3YzO21vbml0b3JpbmeqAhpHb29nbGUuQ2xvdWQuTW9uaXRvcmluZy5W",
            "M2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Cloud.Monitoring.V3.NotificationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsRequest), global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsRequest.Parser, new[]{ "Name", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsResponse), global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsResponse.Parser, new[]{ "ChannelDescriptors", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.GetNotificationChannelDescriptorRequest), global::Google.Cloud.Monitoring.V3.GetNotificationChannelDescriptorRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.CreateNotificationChannelRequest), global::Google.Cloud.Monitoring.V3.CreateNotificationChannelRequest.Parser, new[]{ "Name", "NotificationChannel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.ListNotificationChannelsRequest), global::Google.Cloud.Monitoring.V3.ListNotificationChannelsRequest.Parser, new[]{ "Name", "Filter", "OrderBy", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.ListNotificationChannelsResponse), global::Google.Cloud.Monitoring.V3.ListNotificationChannelsResponse.Parser, new[]{ "NotificationChannels", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.GetNotificationChannelRequest), global::Google.Cloud.Monitoring.V3.GetNotificationChannelRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.UpdateNotificationChannelRequest), global::Google.Cloud.Monitoring.V3.UpdateNotificationChannelRequest.Parser, new[]{ "UpdateMask", "NotificationChannel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.DeleteNotificationChannelRequest), global::Google.Cloud.Monitoring.V3.DeleteNotificationChannelRequest.Parser, new[]{ "Name", "Force" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The `ListNotificationChannelDescriptors` request.
  /// </summary>
  public sealed partial class ListNotificationChannelDescriptorsRequest : pb::IMessage<ListNotificationChannelDescriptorsRequest> {
    private static readonly pb::MessageParser<ListNotificationChannelDescriptorsRequest> _parser = new pb::MessageParser<ListNotificationChannelDescriptorsRequest>(() => new ListNotificationChannelDescriptorsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNotificationChannelDescriptorsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.NotificationServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotificationChannelDescriptorsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotificationChannelDescriptorsRequest(ListNotificationChannelDescriptorsRequest other) : this() {
      name_ = other.name_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotificationChannelDescriptorsRequest Clone() {
      return new ListNotificationChannelDescriptorsRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// The REST resource name of the parent from which to retrieve
    /// the notification channel descriptors. The expected syntax is:
    ///
    ///    "projects/[PROJECT_ID]"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// The maximum number of results to return in a single response. If
    /// not set to a positive number, a reasonable value will be chosen by the
    /// service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// If non-empty, `page_token` must contain a value returned as the
    /// `next_page_token` in a previous response to request the next set
    /// of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNotificationChannelDescriptorsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNotificationChannelDescriptorsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNotificationChannelDescriptorsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The `ListNotificationChannelDescriptors` response.
  /// </summary>
  public sealed partial class ListNotificationChannelDescriptorsResponse : pb::IMessage<ListNotificationChannelDescriptorsResponse> {
    private static readonly pb::MessageParser<ListNotificationChannelDescriptorsResponse> _parser = new pb::MessageParser<ListNotificationChannelDescriptorsResponse>(() => new ListNotificationChannelDescriptorsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNotificationChannelDescriptorsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.NotificationServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotificationChannelDescriptorsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotificationChannelDescriptorsResponse(ListNotificationChannelDescriptorsResponse other) : this() {
      channelDescriptors_ = other.channelDescriptors_.Clone();
      nextPageToken_ = other.nextPageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotificationChannelDescriptorsResponse Clone() {
      return new ListNotificationChannelDescriptorsResponse(this);
    }

    /// <summary>Field number for the "channel_descriptors" field.</summary>
    public const int ChannelDescriptorsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.V3.NotificationChannelDescriptor> _repeated_channelDescriptors_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Monitoring.V3.NotificationChannelDescriptor.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.NotificationChannelDescriptor> channelDescriptors_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.NotificationChannelDescriptor>();
    /// <summary>
    /// The monitored resource descriptors supported for the specified
    /// project, optionally filtered.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.NotificationChannelDescriptor> ChannelDescriptors {
      get { return channelDescriptors_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// If not empty, indicates that there may be more results that match
    /// the request. Use the value in the `page_token` field in a
    /// subsequent request to fetch the next set of results. If empty,
    /// all results have been returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNotificationChannelDescriptorsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNotificationChannelDescriptorsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!channelDescriptors_.Equals(other.channelDescriptors_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= channelDescriptors_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      channelDescriptors_.WriteTo(output, _repeated_channelDescriptors_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += channelDescriptors_.CalculateSize(_repeated_channelDescriptors_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNotificationChannelDescriptorsResponse other) {
      if (other == null) {
        return;
      }
      channelDescriptors_.Add(other.channelDescriptors_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            channelDescriptors_.AddEntriesFrom(input, _repeated_channelDescriptors_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The `GetNotificationChannelDescriptor` response.
  /// </summary>
  public sealed partial class GetNotificationChannelDescriptorRequest : pb::IMessage<GetNotificationChannelDescriptorRequest> {
    private static readonly pb::MessageParser<GetNotificationChannelDescriptorRequest> _parser = new pb::MessageParser<GetNotificationChannelDescriptorRequest>(() => new GetNotificationChannelDescriptorRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNotificationChannelDescriptorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.NotificationServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationChannelDescriptorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationChannelDescriptorRequest(GetNotificationChannelDescriptorRequest other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationChannelDescriptorRequest Clone() {
      return new GetNotificationChannelDescriptorRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// The channel type for which to execute the request. The format is
    /// `"projects/{project_id_or_number}/notificationChannelDescriptors/{channel_type}"`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNotificationChannelDescriptorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNotificationChannelDescriptorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNotificationChannelDescriptorRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The `CreateNotificationChannel` request.
  /// </summary>
  public sealed partial class CreateNotificationChannelRequest : pb::IMessage<CreateNotificationChannelRequest> {
    private static readonly pb::MessageParser<CreateNotificationChannelRequest> _parser = new pb::MessageParser<CreateNotificationChannelRequest>(() => new CreateNotificationChannelRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateNotificationChannelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.NotificationServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNotificationChannelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNotificationChannelRequest(CreateNotificationChannelRequest other) : this() {
      name_ = other.name_;
      NotificationChannel = other.notificationChannel_ != null ? other.NotificationChannel.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNotificationChannelRequest Clone() {
      return new CreateNotificationChannelRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// The project on which to execute the request. The format is
    /// `"projects/{project_id_or_number}"`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notification_channel" field.</summary>
    public const int NotificationChannelFieldNumber = 2;
    private global::Google.Cloud.Monitoring.V3.NotificationChannel notificationChannel_;
    /// <summary>
    /// The definition of the `NotificationChannel` to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.V3.NotificationChannel NotificationChannel {
      get { return notificationChannel_; }
      set {
        notificationChannel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateNotificationChannelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateNotificationChannelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(NotificationChannel, other.NotificationChannel)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (notificationChannel_ != null) hash ^= NotificationChannel.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (notificationChannel_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NotificationChannel);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (notificationChannel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotificationChannel);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateNotificationChannelRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.notificationChannel_ != null) {
        if (notificationChannel_ == null) {
          notificationChannel_ = new global::Google.Cloud.Monitoring.V3.NotificationChannel();
        }
        NotificationChannel.MergeFrom(other.NotificationChannel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            if (notificationChannel_ == null) {
              notificationChannel_ = new global::Google.Cloud.Monitoring.V3.NotificationChannel();
            }
            input.ReadMessage(notificationChannel_);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The `ListNotificationChannels` request.
  /// </summary>
  public sealed partial class ListNotificationChannelsRequest : pb::IMessage<ListNotificationChannelsRequest> {
    private static readonly pb::MessageParser<ListNotificationChannelsRequest> _parser = new pb::MessageParser<ListNotificationChannelsRequest>(() => new ListNotificationChannelsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNotificationChannelsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.NotificationServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotificationChannelsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotificationChannelsRequest(ListNotificationChannelsRequest other) : this() {
      name_ = other.name_;
      filter_ = other.filter_;
      orderBy_ = other.orderBy_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotificationChannelsRequest Clone() {
      return new ListNotificationChannelsRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// The project on which to execute the request. The format is
    /// `"projects/{project_id_or_number}"`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 6;
    private string filter_ = "";
    /// <summary>
    /// If provided, this field specifies the criteria that must be met by
    /// notification channels to be included in the response. For more details, see
    /// [sorting and
    /// filtering](/monitoring/alpha-alerting/docs/sorting-and-filtering.md).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 7;
    private string orderBy_ = "";
    /// <summary>
    /// A comma-separated list of fields by which to sort the result. Supports
    /// the same set of fields as in `filter`. Entries can be prefixed with
    /// a minus sign to sort in descending rather than ascending order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private int pageSize_;
    /// <summary>
    /// The maximum number of results to return in a single response. If
    /// not set to a positive number, a reasonable value will be chosen by the
    /// service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 4;
    private string pageToken_ = "";
    /// <summary>
    /// If non-empty, `page_token` must contain a value returned as the
    /// `next_page_token` in a previous response to request the next set
    /// of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNotificationChannelsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNotificationChannelsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Filter != other.Filter) return false;
      if (OrderBy != other.OrderBy) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OrderBy);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNotificationChannelsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            Filter = input.ReadString();
            break;
          }
          case 58: {
            OrderBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The `ListNotificationChannels` response.
  /// </summary>
  public sealed partial class ListNotificationChannelsResponse : pb::IMessage<ListNotificationChannelsResponse> {
    private static readonly pb::MessageParser<ListNotificationChannelsResponse> _parser = new pb::MessageParser<ListNotificationChannelsResponse>(() => new ListNotificationChannelsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNotificationChannelsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.NotificationServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotificationChannelsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotificationChannelsResponse(ListNotificationChannelsResponse other) : this() {
      notificationChannels_ = other.notificationChannels_.Clone();
      nextPageToken_ = other.nextPageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotificationChannelsResponse Clone() {
      return new ListNotificationChannelsResponse(this);
    }

    /// <summary>Field number for the "notification_channels" field.</summary>
    public const int NotificationChannelsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.V3.NotificationChannel> _repeated_notificationChannels_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Monitoring.V3.NotificationChannel.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.NotificationChannel> notificationChannels_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.NotificationChannel>();
    /// <summary>
    /// The notification channels defined for the specified project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.NotificationChannel> NotificationChannels {
      get { return notificationChannels_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// If not empty, indicates that there may be more results that match
    /// the request. Use the value in the `page_token` field in a
    /// subsequent request to fetch the next set of results. If empty,
    /// all results have been returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNotificationChannelsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNotificationChannelsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!notificationChannels_.Equals(other.notificationChannels_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= notificationChannels_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      notificationChannels_.WriteTo(output, _repeated_notificationChannels_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += notificationChannels_.CalculateSize(_repeated_notificationChannels_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNotificationChannelsResponse other) {
      if (other == null) {
        return;
      }
      notificationChannels_.Add(other.notificationChannels_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 26: {
            notificationChannels_.AddEntriesFrom(input, _repeated_notificationChannels_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The `GetNotificationChannel` request.
  /// </summary>
  public sealed partial class GetNotificationChannelRequest : pb::IMessage<GetNotificationChannelRequest> {
    private static readonly pb::MessageParser<GetNotificationChannelRequest> _parser = new pb::MessageParser<GetNotificationChannelRequest>(() => new GetNotificationChannelRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNotificationChannelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.NotificationServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationChannelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationChannelRequest(GetNotificationChannelRequest other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationChannelRequest Clone() {
      return new GetNotificationChannelRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// The channel for which to execute the request. The format is
    /// `"projects/{project_id_or_number}/notificationChannels/{channel_id}"`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNotificationChannelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNotificationChannelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNotificationChannelRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The `UpdateNotificationChannel` request.
  /// </summary>
  public sealed partial class UpdateNotificationChannelRequest : pb::IMessage<UpdateNotificationChannelRequest> {
    private static readonly pb::MessageParser<UpdateNotificationChannelRequest> _parser = new pb::MessageParser<UpdateNotificationChannelRequest>(() => new UpdateNotificationChannelRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateNotificationChannelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.NotificationServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNotificationChannelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNotificationChannelRequest(UpdateNotificationChannelRequest other) : this() {
      UpdateMask = other.updateMask_ != null ? other.UpdateMask.Clone() : null;
      NotificationChannel = other.notificationChannel_ != null ? other.NotificationChannel.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNotificationChannelRequest Clone() {
      return new UpdateNotificationChannelRequest(this);
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// The fields to update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "notification_channel" field.</summary>
    public const int NotificationChannelFieldNumber = 3;
    private global::Google.Cloud.Monitoring.V3.NotificationChannel notificationChannel_;
    /// <summary>
    /// A description of the changes to be applied to the specified
    /// notification channel. The description must provide a definition for
    /// fields to be updated; the names of these fields should also be
    /// included in the `update_mask`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.V3.NotificationChannel NotificationChannel {
      get { return notificationChannel_; }
      set {
        notificationChannel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateNotificationChannelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateNotificationChannelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (!object.Equals(NotificationChannel, other.NotificationChannel)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (notificationChannel_ != null) hash ^= NotificationChannel.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (notificationChannel_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NotificationChannel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (notificationChannel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotificationChannel);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateNotificationChannelRequest other) {
      if (other == null) {
        return;
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          updateMask_ = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.notificationChannel_ != null) {
        if (notificationChannel_ == null) {
          notificationChannel_ = new global::Google.Cloud.Monitoring.V3.NotificationChannel();
        }
        NotificationChannel.MergeFrom(other.NotificationChannel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            if (updateMask_ == null) {
              updateMask_ = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(updateMask_);
            break;
          }
          case 26: {
            if (notificationChannel_ == null) {
              notificationChannel_ = new global::Google.Cloud.Monitoring.V3.NotificationChannel();
            }
            input.ReadMessage(notificationChannel_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The `DeleteNotificationChannel` request.
  /// </summary>
  public sealed partial class DeleteNotificationChannelRequest : pb::IMessage<DeleteNotificationChannelRequest> {
    private static readonly pb::MessageParser<DeleteNotificationChannelRequest> _parser = new pb::MessageParser<DeleteNotificationChannelRequest>(() => new DeleteNotificationChannelRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteNotificationChannelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.NotificationServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNotificationChannelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNotificationChannelRequest(DeleteNotificationChannelRequest other) : this() {
      name_ = other.name_;
      force_ = other.force_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNotificationChannelRequest Clone() {
      return new DeleteNotificationChannelRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// The channel for which to execute the request. The format is
    /// `"projects/{project_id_or_number}/notificationChannels/{channel_id}"`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "force" field.</summary>
    public const int ForceFieldNumber = 5;
    private bool force_;
    /// <summary>
    /// If true, the notification channel will be deleted regardless of its
    /// use in alert policies (the policies will be updated to remove the
    /// channel). If false, channels that are still referenced by an existing
    /// alerting policy will fail to be deleted in a delete operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Force {
      get { return force_; }
      set {
        force_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteNotificationChannelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteNotificationChannelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Force != other.Force) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Force != false) hash ^= Force.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Force != false) {
        output.WriteRawTag(40);
        output.WriteBool(Force);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Force != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteNotificationChannelRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Force != false) {
        Force = other.Force;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            Force = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
