// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/alert_service.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Monitoring.V3 {

  /// <summary>Holder for reflection information generated from google/monitoring/v3/alert_service.proto</summary>
  public static partial class AlertServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/monitoring/v3/alert_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AlertServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihnb29nbGUvbW9uaXRvcmluZy92My9hbGVydF9zZXJ2aWNlLnByb3RvEhRn",
            "b29nbGUubW9uaXRvcmluZy52MxocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5w",
            "cm90bxogZ29vZ2xlL21vbml0b3JpbmcvdjMvYWxlcnQucHJvdG8aG2dvb2ds",
            "ZS9wcm90b2J1Zi9lbXB0eS5wcm90bxogZ29vZ2xlL3Byb3RvYnVmL2ZpZWxk",
            "X21hc2sucHJvdG8iYQoYQ3JlYXRlQWxlcnRQb2xpY3lSZXF1ZXN0EgwKBG5h",
            "bWUYAyABKAkSNwoMYWxlcnRfcG9saWN5GAIgASgLMiEuZ29vZ2xlLm1vbml0",
            "b3JpbmcudjMuQWxlcnRQb2xpY3kiJQoVR2V0QWxlcnRQb2xpY3lSZXF1ZXN0",
            "EgwKBG5hbWUYAyABKAkicQoYTGlzdEFsZXJ0UG9saWNpZXNSZXF1ZXN0EgwK",
            "BG5hbWUYBCABKAkSDgoGZmlsdGVyGAUgASgJEhAKCG9yZGVyX2J5GAYgASgJ",
            "EhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rva2VuGAMgASgJIm8KGUxp",
            "c3RBbGVydFBvbGljaWVzUmVzcG9uc2USOQoOYWxlcnRfcG9saWNpZXMYAyAD",
            "KAsyIS5nb29nbGUubW9uaXRvcmluZy52My5BbGVydFBvbGljeRIXCg9uZXh0",
            "X3BhZ2VfdG9rZW4YAiABKAkihAEKGFVwZGF0ZUFsZXJ0UG9saWN5UmVxdWVz",
            "dBIvCgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVs",
            "ZE1hc2sSNwoMYWxlcnRfcG9saWN5GAMgASgLMiEuZ29vZ2xlLm1vbml0b3Jp",
            "bmcudjMuQWxlcnRQb2xpY3kiKAoYRGVsZXRlQWxlcnRQb2xpY3lSZXF1ZXN0",
            "EgwKBG5hbWUYAyABKAkyrgYKEkFsZXJ0UG9saWN5U2VydmljZRKhAQoRTGlz",
            "dEFsZXJ0UG9saWNpZXMSLi5nb29nbGUubW9uaXRvcmluZy52My5MaXN0QWxl",
            "cnRQb2xpY2llc1JlcXVlc3QaLy5nb29nbGUubW9uaXRvcmluZy52My5MaXN0",
            "QWxlcnRQb2xpY2llc1Jlc3BvbnNlIiuC0+STAiUSIy92My97bmFtZT1wcm9q",
            "ZWN0cy8qfS9hbGVydFBvbGljaWVzEo8BCg5HZXRBbGVydFBvbGljeRIrLmdv",
            "b2dsZS5tb25pdG9yaW5nLnYzLkdldEFsZXJ0UG9saWN5UmVxdWVzdBohLmdv",
            "b2dsZS5tb25pdG9yaW5nLnYzLkFsZXJ0UG9saWN5Ii2C0+STAicSJS92My97",
            "bmFtZT1wcm9qZWN0cy8qL2FsZXJ0UG9saWNpZXMvKn0SoQEKEUNyZWF0ZUFs",
            "ZXJ0UG9saWN5Ei4uZ29vZ2xlLm1vbml0b3JpbmcudjMuQ3JlYXRlQWxlcnRQ",
            "b2xpY3lSZXF1ZXN0GiEuZ29vZ2xlLm1vbml0b3JpbmcudjMuQWxlcnRQb2xp",
            "Y3kiOYLT5JMCMyIjL3YzL3tuYW1lPXByb2plY3RzLyp9L2FsZXJ0UG9saWNp",
            "ZXM6DGFsZXJ0X3BvbGljeRKKAQoRRGVsZXRlQWxlcnRQb2xpY3kSLi5nb29n",
            "bGUubW9uaXRvcmluZy52My5EZWxldGVBbGVydFBvbGljeVJlcXVlc3QaFi5n",
            "b29nbGUucHJvdG9idWYuRW1wdHkiLYLT5JMCJyolL3YzL3tuYW1lPXByb2pl",
            "Y3RzLyovYWxlcnRQb2xpY2llcy8qfRKwAQoRVXBkYXRlQWxlcnRQb2xpY3kS",
            "Li5nb29nbGUubW9uaXRvcmluZy52My5VcGRhdGVBbGVydFBvbGljeVJlcXVl",
            "c3QaIS5nb29nbGUubW9uaXRvcmluZy52My5BbGVydFBvbGljeSJIgtPkkwJC",
            "MjIvdjMve2FsZXJ0X3BvbGljeS5uYW1lPXByb2plY3RzLyovYWxlcnRQb2xp",
            "Y2llcy8qfToMYWxlcnRfcG9saWN5QqkBChhjb20uZ29vZ2xlLm1vbml0b3Jp",
            "bmcudjNCEUFsZXJ0U2VydmljZVByb3RvUAFaPmdvb2dsZS5nb2xhbmcub3Jn",
            "L2dlbnByb3RvL2dvb2dsZWFwaXMvbW9uaXRvcmluZy92Mzttb25pdG9yaW5n",
            "qgIaR29vZ2xlLkNsb3VkLk1vbml0b3JpbmcuVjPKAhpHb29nbGVcQ2xvdWRc",
            "TW9uaXRvcmluZ1xWM2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Cloud.Monitoring.V3.AlertReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.CreateAlertPolicyRequest), global::Google.Cloud.Monitoring.V3.CreateAlertPolicyRequest.Parser, new[]{ "Name", "AlertPolicy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.GetAlertPolicyRequest), global::Google.Cloud.Monitoring.V3.GetAlertPolicyRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.ListAlertPoliciesRequest), global::Google.Cloud.Monitoring.V3.ListAlertPoliciesRequest.Parser, new[]{ "Name", "Filter", "OrderBy", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.ListAlertPoliciesResponse), global::Google.Cloud.Monitoring.V3.ListAlertPoliciesResponse.Parser, new[]{ "AlertPolicies", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.UpdateAlertPolicyRequest), global::Google.Cloud.Monitoring.V3.UpdateAlertPolicyRequest.Parser, new[]{ "UpdateMask", "AlertPolicy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.DeleteAlertPolicyRequest), global::Google.Cloud.Monitoring.V3.DeleteAlertPolicyRequest.Parser, new[]{ "Name" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The protocol for the `CreateAlertPolicy` request.
  /// </summary>
  public sealed partial class CreateAlertPolicyRequest : pb::IMessage<CreateAlertPolicyRequest> {
    private static readonly pb::MessageParser<CreateAlertPolicyRequest> _parser = new pb::MessageParser<CreateAlertPolicyRequest>(() => new CreateAlertPolicyRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateAlertPolicyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.AlertServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAlertPolicyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAlertPolicyRequest(CreateAlertPolicyRequest other) : this() {
      name_ = other.name_;
      AlertPolicy = other.alertPolicy_ != null ? other.AlertPolicy.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAlertPolicyRequest Clone() {
      return new CreateAlertPolicyRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// The project in which to create the alerting policy. The format is
    /// `projects/[PROJECT_ID]`.
    ///
    /// Note that this field names the parent container in which the alerting
    /// policy will be written, not the name of the created policy. The alerting
    /// policy that is returned will have a name that contains a normalized
    /// representation of this name as a prefix but adds a suffix of the form
    /// "/alertPolicies/[POLICY_ID]", identifying the policy in the container.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alert_policy" field.</summary>
    public const int AlertPolicyFieldNumber = 2;
    private global::Google.Cloud.Monitoring.V3.AlertPolicy alertPolicy_;
    /// <summary>
    /// The requested alerting policy. You should omit the `name` field in this
    /// policy. The name will be returned in the new policy, including
    /// a new [ALERT_POLICY_ID] value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.V3.AlertPolicy AlertPolicy {
      get { return alertPolicy_; }
      set {
        alertPolicy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateAlertPolicyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateAlertPolicyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(AlertPolicy, other.AlertPolicy)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (alertPolicy_ != null) hash ^= AlertPolicy.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (alertPolicy_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AlertPolicy);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (alertPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AlertPolicy);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateAlertPolicyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.alertPolicy_ != null) {
        if (alertPolicy_ == null) {
          alertPolicy_ = new global::Google.Cloud.Monitoring.V3.AlertPolicy();
        }
        AlertPolicy.MergeFrom(other.AlertPolicy);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            if (alertPolicy_ == null) {
              alertPolicy_ = new global::Google.Cloud.Monitoring.V3.AlertPolicy();
            }
            input.ReadMessage(alertPolicy_);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The protocol for the `GetAlertPolicy` request.
  /// </summary>
  public sealed partial class GetAlertPolicyRequest : pb::IMessage<GetAlertPolicyRequest> {
    private static readonly pb::MessageParser<GetAlertPolicyRequest> _parser = new pb::MessageParser<GetAlertPolicyRequest>(() => new GetAlertPolicyRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAlertPolicyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.AlertServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAlertPolicyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAlertPolicyRequest(GetAlertPolicyRequest other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAlertPolicyRequest Clone() {
      return new GetAlertPolicyRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// The alerting policy to retrieve. The format is
    ///
    ///     projects/[PROJECT_ID]/alertPolicies/[ALERT_POLICY_ID]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAlertPolicyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAlertPolicyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAlertPolicyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The protocol for the `ListAlertPolicies` request.
  /// </summary>
  public sealed partial class ListAlertPoliciesRequest : pb::IMessage<ListAlertPoliciesRequest> {
    private static readonly pb::MessageParser<ListAlertPoliciesRequest> _parser = new pb::MessageParser<ListAlertPoliciesRequest>(() => new ListAlertPoliciesRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAlertPoliciesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.AlertServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAlertPoliciesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAlertPoliciesRequest(ListAlertPoliciesRequest other) : this() {
      name_ = other.name_;
      filter_ = other.filter_;
      orderBy_ = other.orderBy_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAlertPoliciesRequest Clone() {
      return new ListAlertPoliciesRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// The project whose alert policies are to be listed. The format is
    ///
    ///     projects/[PROJECT_ID]
    ///
    /// Note that this field names the parent container in which the alerting
    /// policies to be listed are stored. To retrieve a single alerting policy
    /// by name, use the [GetAlertPolicy][] operation, instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 5;
    private string filter_ = "";
    /// <summary>
    /// If provided, this field specifies the criteria that must be met by
    /// alert policies to be included in the response. For more details, see
    /// [sorting and
    /// filtering](/monitoring/alpha-alerting/docs/sorting-and-filtering.md).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 6;
    private string orderBy_ = "";
    /// <summary>
    /// A comma-separated list of fields by which to sort the result. Supports
    /// the same set of field references as the `"filter"`. Entries can be
    /// prefixed with a minus sign to sort by the field in descending order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// The maximum number of results to return in a single response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// If this field is not empty then it must contain the `nextPageToken` value
    /// returned by a previous call to this method.  Using this field causes the
    /// method to return more results from the previous method call.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAlertPoliciesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAlertPoliciesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Filter != other.Filter) return false;
      if (OrderBy != other.OrderBy) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OrderBy);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAlertPoliciesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Filter = input.ReadString();
            break;
          }
          case 50: {
            OrderBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The protocol for the `ListAlertPolicies` response.
  /// </summary>
  public sealed partial class ListAlertPoliciesResponse : pb::IMessage<ListAlertPoliciesResponse> {
    private static readonly pb::MessageParser<ListAlertPoliciesResponse> _parser = new pb::MessageParser<ListAlertPoliciesResponse>(() => new ListAlertPoliciesResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAlertPoliciesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.AlertServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAlertPoliciesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAlertPoliciesResponse(ListAlertPoliciesResponse other) : this() {
      alertPolicies_ = other.alertPolicies_.Clone();
      nextPageToken_ = other.nextPageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAlertPoliciesResponse Clone() {
      return new ListAlertPoliciesResponse(this);
    }

    /// <summary>Field number for the "alert_policies" field.</summary>
    public const int AlertPoliciesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.V3.AlertPolicy> _repeated_alertPolicies_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Monitoring.V3.AlertPolicy.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.AlertPolicy> alertPolicies_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.AlertPolicy>();
    /// <summary>
    /// The returned alert policies.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.AlertPolicy> AlertPolicies {
      get { return alertPolicies_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// If there might be more results than were returned, then this field is set
    /// to a non-empty value. To see the additional results,
    /// use that value as `pageToken` in the next call to this method.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAlertPoliciesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAlertPoliciesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!alertPolicies_.Equals(other.alertPolicies_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= alertPolicies_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      alertPolicies_.WriteTo(output, _repeated_alertPolicies_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += alertPolicies_.CalculateSize(_repeated_alertPolicies_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAlertPoliciesResponse other) {
      if (other == null) {
        return;
      }
      alertPolicies_.Add(other.alertPolicies_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 26: {
            alertPolicies_.AddEntriesFrom(input, _repeated_alertPolicies_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The protocol for the `UpdateAlertPolicy` request.
  /// </summary>
  public sealed partial class UpdateAlertPolicyRequest : pb::IMessage<UpdateAlertPolicyRequest> {
    private static readonly pb::MessageParser<UpdateAlertPolicyRequest> _parser = new pb::MessageParser<UpdateAlertPolicyRequest>(() => new UpdateAlertPolicyRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateAlertPolicyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.AlertServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAlertPolicyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAlertPolicyRequest(UpdateAlertPolicyRequest other) : this() {
      UpdateMask = other.updateMask_ != null ? other.UpdateMask.Clone() : null;
      AlertPolicy = other.alertPolicy_ != null ? other.AlertPolicy.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAlertPolicyRequest Clone() {
      return new UpdateAlertPolicyRequest(this);
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Optional. A list of alerting policy field names. If this field is not
    /// empty, each listed field in the existing alerting policy is set to the
    /// value of the corresponding field in the supplied policy (`alert_policy`),
    /// or to the field's default value if the field is not in the supplied
    /// alerting policy.  Fields not listed retain their previous value.
    /// Presently, the `"updateMask"` field may list only `"disabled"`,
    /// `"notification_channels", or both of those fields together.
    ///
    /// If this field is empty, then the supplied alerting policy replaces the
    /// existing policy. It is the same as deleting the existing policy and
    /// adding the supplied policy, except for the following:
    ///
    /// +   The new policy will have the same [ALERT_POLICY_ID] as the former
    ///     policy. This gives you continuity with the former policy in your
    ///     notifications and incidents.
    /// +   Conditions in the new policy will keep their former [CONDITION_ID] if
    ///     the supplied condition includes the `name` field with that
    ///     [CONDITION_ID]. If the supplied condition omits the `name` field,
    ///     then a new [CONDITION_ID] is created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "alert_policy" field.</summary>
    public const int AlertPolicyFieldNumber = 3;
    private global::Google.Cloud.Monitoring.V3.AlertPolicy alertPolicy_;
    /// <summary>
    /// Required. The updated alerting policy or the updated values for the
    /// fields listed in `update_mask`.
    /// If `update_mask` is not empty, any fields in this policy that are
    /// not in `update_mask` are ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.V3.AlertPolicy AlertPolicy {
      get { return alertPolicy_; }
      set {
        alertPolicy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateAlertPolicyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateAlertPolicyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (!object.Equals(AlertPolicy, other.AlertPolicy)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (alertPolicy_ != null) hash ^= AlertPolicy.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (alertPolicy_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AlertPolicy);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (alertPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AlertPolicy);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateAlertPolicyRequest other) {
      if (other == null) {
        return;
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          updateMask_ = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.alertPolicy_ != null) {
        if (alertPolicy_ == null) {
          alertPolicy_ = new global::Google.Cloud.Monitoring.V3.AlertPolicy();
        }
        AlertPolicy.MergeFrom(other.AlertPolicy);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            if (updateMask_ == null) {
              updateMask_ = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(updateMask_);
            break;
          }
          case 26: {
            if (alertPolicy_ == null) {
              alertPolicy_ = new global::Google.Cloud.Monitoring.V3.AlertPolicy();
            }
            input.ReadMessage(alertPolicy_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The protocol for the `DeleteAlertPolicy` request.
  /// </summary>
  public sealed partial class DeleteAlertPolicyRequest : pb::IMessage<DeleteAlertPolicyRequest> {
    private static readonly pb::MessageParser<DeleteAlertPolicyRequest> _parser = new pb::MessageParser<DeleteAlertPolicyRequest>(() => new DeleteAlertPolicyRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteAlertPolicyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.AlertServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAlertPolicyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAlertPolicyRequest(DeleteAlertPolicyRequest other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAlertPolicyRequest Clone() {
      return new DeleteAlertPolicyRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// The alerting policy to delete. The format is:
    ///
    ///     projects/[PROJECT_ID]/alertPolicies/[ALERT_POLICY_ID]
    ///
    /// For more information, see [AlertPolicy][google.monitoring.v3.AlertPolicy].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteAlertPolicyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteAlertPolicyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteAlertPolicyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
