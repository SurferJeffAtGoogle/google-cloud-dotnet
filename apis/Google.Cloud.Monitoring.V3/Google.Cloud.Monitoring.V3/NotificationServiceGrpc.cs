// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/notification_service.proto
// Original file comments:
// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Google.Cloud.Monitoring.V3 {
  /// <summary>
  /// The Notification Channel API provides access to configuration that
  /// controls how messages related to incidents are sent.
  /// </summary>
  public static partial class NotificationChannelService
  {
    static readonly string __ServiceName = "google.monitoring.v3.NotificationChannelService";

    static readonly grpc::Marshaller<global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsRequest> __Marshaller_ListNotificationChannelDescriptorsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsResponse> __Marshaller_ListNotificationChannelDescriptorsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Monitoring.V3.GetNotificationChannelDescriptorRequest> __Marshaller_GetNotificationChannelDescriptorRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Monitoring.V3.GetNotificationChannelDescriptorRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Monitoring.V3.NotificationChannelDescriptor> __Marshaller_NotificationChannelDescriptor = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Monitoring.V3.NotificationChannelDescriptor.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Monitoring.V3.ListNotificationChannelsRequest> __Marshaller_ListNotificationChannelsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Monitoring.V3.ListNotificationChannelsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Monitoring.V3.ListNotificationChannelsResponse> __Marshaller_ListNotificationChannelsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Monitoring.V3.ListNotificationChannelsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Monitoring.V3.GetNotificationChannelRequest> __Marshaller_GetNotificationChannelRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Monitoring.V3.GetNotificationChannelRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Monitoring.V3.NotificationChannel> __Marshaller_NotificationChannel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Monitoring.V3.NotificationChannel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Monitoring.V3.CreateNotificationChannelRequest> __Marshaller_CreateNotificationChannelRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Monitoring.V3.CreateNotificationChannelRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Monitoring.V3.UpdateNotificationChannelRequest> __Marshaller_UpdateNotificationChannelRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Monitoring.V3.UpdateNotificationChannelRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Cloud.Monitoring.V3.DeleteNotificationChannelRequest> __Marshaller_DeleteNotificationChannelRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Monitoring.V3.DeleteNotificationChannelRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);

    static readonly grpc::Method<global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsRequest, global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsResponse> __Method_ListNotificationChannelDescriptors = new grpc::Method<global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsRequest, global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListNotificationChannelDescriptors",
        __Marshaller_ListNotificationChannelDescriptorsRequest,
        __Marshaller_ListNotificationChannelDescriptorsResponse);

    static readonly grpc::Method<global::Google.Cloud.Monitoring.V3.GetNotificationChannelDescriptorRequest, global::Google.Cloud.Monitoring.V3.NotificationChannelDescriptor> __Method_GetNotificationChannelDescriptor = new grpc::Method<global::Google.Cloud.Monitoring.V3.GetNotificationChannelDescriptorRequest, global::Google.Cloud.Monitoring.V3.NotificationChannelDescriptor>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNotificationChannelDescriptor",
        __Marshaller_GetNotificationChannelDescriptorRequest,
        __Marshaller_NotificationChannelDescriptor);

    static readonly grpc::Method<global::Google.Cloud.Monitoring.V3.ListNotificationChannelsRequest, global::Google.Cloud.Monitoring.V3.ListNotificationChannelsResponse> __Method_ListNotificationChannels = new grpc::Method<global::Google.Cloud.Monitoring.V3.ListNotificationChannelsRequest, global::Google.Cloud.Monitoring.V3.ListNotificationChannelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListNotificationChannels",
        __Marshaller_ListNotificationChannelsRequest,
        __Marshaller_ListNotificationChannelsResponse);

    static readonly grpc::Method<global::Google.Cloud.Monitoring.V3.GetNotificationChannelRequest, global::Google.Cloud.Monitoring.V3.NotificationChannel> __Method_GetNotificationChannel = new grpc::Method<global::Google.Cloud.Monitoring.V3.GetNotificationChannelRequest, global::Google.Cloud.Monitoring.V3.NotificationChannel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNotificationChannel",
        __Marshaller_GetNotificationChannelRequest,
        __Marshaller_NotificationChannel);

    static readonly grpc::Method<global::Google.Cloud.Monitoring.V3.CreateNotificationChannelRequest, global::Google.Cloud.Monitoring.V3.NotificationChannel> __Method_CreateNotificationChannel = new grpc::Method<global::Google.Cloud.Monitoring.V3.CreateNotificationChannelRequest, global::Google.Cloud.Monitoring.V3.NotificationChannel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateNotificationChannel",
        __Marshaller_CreateNotificationChannelRequest,
        __Marshaller_NotificationChannel);

    static readonly grpc::Method<global::Google.Cloud.Monitoring.V3.UpdateNotificationChannelRequest, global::Google.Cloud.Monitoring.V3.NotificationChannel> __Method_UpdateNotificationChannel = new grpc::Method<global::Google.Cloud.Monitoring.V3.UpdateNotificationChannelRequest, global::Google.Cloud.Monitoring.V3.NotificationChannel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateNotificationChannel",
        __Marshaller_UpdateNotificationChannelRequest,
        __Marshaller_NotificationChannel);

    static readonly grpc::Method<global::Google.Cloud.Monitoring.V3.DeleteNotificationChannelRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteNotificationChannel = new grpc::Method<global::Google.Cloud.Monitoring.V3.DeleteNotificationChannelRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteNotificationChannel",
        __Marshaller_DeleteNotificationChannelRequest,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Monitoring.V3.NotificationServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of NotificationChannelService</summary>
    public abstract partial class NotificationChannelServiceBase
    {
      /// <summary>
      /// Lists the descriptors for supported channel types. The use of descriptors
      /// makes it possible for new channel types to be dynamically added.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsResponse> ListNotificationChannelDescriptors(global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a single channel descriptor. The descriptor indicates which fields
      /// are expected / permitted for a notification channel of the given type.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Monitoring.V3.NotificationChannelDescriptor> GetNotificationChannelDescriptor(global::Google.Cloud.Monitoring.V3.GetNotificationChannelDescriptorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the notification channels that have been created for the project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Monitoring.V3.ListNotificationChannelsResponse> ListNotificationChannels(global::Google.Cloud.Monitoring.V3.ListNotificationChannelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a single notification channel. The channel includes the relevant
      /// configuration details with which the channel was created. However, the
      /// response may truncate or omit passwords, API keys, or other private key
      /// matter and thus the response may not be 100% identical to the information
      /// that was supplied in the call to the create method.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Monitoring.V3.NotificationChannel> GetNotificationChannel(global::Google.Cloud.Monitoring.V3.GetNotificationChannelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new notification channel, representing a single notification
      /// endpoint such as an email address, SMS number, or pagerduty service.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Monitoring.V3.NotificationChannel> CreateNotificationChannel(global::Google.Cloud.Monitoring.V3.CreateNotificationChannelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a notification channel. Fields not specified in the field mask
      /// remain unchanged.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Monitoring.V3.NotificationChannel> UpdateNotificationChannel(global::Google.Cloud.Monitoring.V3.UpdateNotificationChannelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a notification channel.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteNotificationChannel(global::Google.Cloud.Monitoring.V3.DeleteNotificationChannelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for NotificationChannelService</summary>
    public partial class NotificationChannelServiceClient : grpc::ClientBase<NotificationChannelServiceClient>
    {
      /// <summary>Creates a new client for NotificationChannelService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public NotificationChannelServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for NotificationChannelService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public NotificationChannelServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected NotificationChannelServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected NotificationChannelServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists the descriptors for supported channel types. The use of descriptors
      /// makes it possible for new channel types to be dynamically added.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsResponse ListNotificationChannelDescriptors(global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListNotificationChannelDescriptors(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the descriptors for supported channel types. The use of descriptors
      /// makes it possible for new channel types to be dynamically added.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsResponse ListNotificationChannelDescriptors(global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListNotificationChannelDescriptors, null, options, request);
      }
      /// <summary>
      /// Lists the descriptors for supported channel types. The use of descriptors
      /// makes it possible for new channel types to be dynamically added.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsResponse> ListNotificationChannelDescriptorsAsync(global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListNotificationChannelDescriptorsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the descriptors for supported channel types. The use of descriptors
      /// makes it possible for new channel types to be dynamically added.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsResponse> ListNotificationChannelDescriptorsAsync(global::Google.Cloud.Monitoring.V3.ListNotificationChannelDescriptorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListNotificationChannelDescriptors, null, options, request);
      }
      /// <summary>
      /// Gets a single channel descriptor. The descriptor indicates which fields
      /// are expected / permitted for a notification channel of the given type.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Monitoring.V3.NotificationChannelDescriptor GetNotificationChannelDescriptor(global::Google.Cloud.Monitoring.V3.GetNotificationChannelDescriptorRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetNotificationChannelDescriptor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a single channel descriptor. The descriptor indicates which fields
      /// are expected / permitted for a notification channel of the given type.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Monitoring.V3.NotificationChannelDescriptor GetNotificationChannelDescriptor(global::Google.Cloud.Monitoring.V3.GetNotificationChannelDescriptorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNotificationChannelDescriptor, null, options, request);
      }
      /// <summary>
      /// Gets a single channel descriptor. The descriptor indicates which fields
      /// are expected / permitted for a notification channel of the given type.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Monitoring.V3.NotificationChannelDescriptor> GetNotificationChannelDescriptorAsync(global::Google.Cloud.Monitoring.V3.GetNotificationChannelDescriptorRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetNotificationChannelDescriptorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a single channel descriptor. The descriptor indicates which fields
      /// are expected / permitted for a notification channel of the given type.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Monitoring.V3.NotificationChannelDescriptor> GetNotificationChannelDescriptorAsync(global::Google.Cloud.Monitoring.V3.GetNotificationChannelDescriptorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNotificationChannelDescriptor, null, options, request);
      }
      /// <summary>
      /// Lists the notification channels that have been created for the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Monitoring.V3.ListNotificationChannelsResponse ListNotificationChannels(global::Google.Cloud.Monitoring.V3.ListNotificationChannelsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListNotificationChannels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the notification channels that have been created for the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Monitoring.V3.ListNotificationChannelsResponse ListNotificationChannels(global::Google.Cloud.Monitoring.V3.ListNotificationChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListNotificationChannels, null, options, request);
      }
      /// <summary>
      /// Lists the notification channels that have been created for the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Monitoring.V3.ListNotificationChannelsResponse> ListNotificationChannelsAsync(global::Google.Cloud.Monitoring.V3.ListNotificationChannelsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListNotificationChannelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the notification channels that have been created for the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Monitoring.V3.ListNotificationChannelsResponse> ListNotificationChannelsAsync(global::Google.Cloud.Monitoring.V3.ListNotificationChannelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListNotificationChannels, null, options, request);
      }
      /// <summary>
      /// Gets a single notification channel. The channel includes the relevant
      /// configuration details with which the channel was created. However, the
      /// response may truncate or omit passwords, API keys, or other private key
      /// matter and thus the response may not be 100% identical to the information
      /// that was supplied in the call to the create method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Monitoring.V3.NotificationChannel GetNotificationChannel(global::Google.Cloud.Monitoring.V3.GetNotificationChannelRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetNotificationChannel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a single notification channel. The channel includes the relevant
      /// configuration details with which the channel was created. However, the
      /// response may truncate or omit passwords, API keys, or other private key
      /// matter and thus the response may not be 100% identical to the information
      /// that was supplied in the call to the create method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Monitoring.V3.NotificationChannel GetNotificationChannel(global::Google.Cloud.Monitoring.V3.GetNotificationChannelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNotificationChannel, null, options, request);
      }
      /// <summary>
      /// Gets a single notification channel. The channel includes the relevant
      /// configuration details with which the channel was created. However, the
      /// response may truncate or omit passwords, API keys, or other private key
      /// matter and thus the response may not be 100% identical to the information
      /// that was supplied in the call to the create method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Monitoring.V3.NotificationChannel> GetNotificationChannelAsync(global::Google.Cloud.Monitoring.V3.GetNotificationChannelRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetNotificationChannelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a single notification channel. The channel includes the relevant
      /// configuration details with which the channel was created. However, the
      /// response may truncate or omit passwords, API keys, or other private key
      /// matter and thus the response may not be 100% identical to the information
      /// that was supplied in the call to the create method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Monitoring.V3.NotificationChannel> GetNotificationChannelAsync(global::Google.Cloud.Monitoring.V3.GetNotificationChannelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNotificationChannel, null, options, request);
      }
      /// <summary>
      /// Creates a new notification channel, representing a single notification
      /// endpoint such as an email address, SMS number, or pagerduty service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Monitoring.V3.NotificationChannel CreateNotificationChannel(global::Google.Cloud.Monitoring.V3.CreateNotificationChannelRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateNotificationChannel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new notification channel, representing a single notification
      /// endpoint such as an email address, SMS number, or pagerduty service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Monitoring.V3.NotificationChannel CreateNotificationChannel(global::Google.Cloud.Monitoring.V3.CreateNotificationChannelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateNotificationChannel, null, options, request);
      }
      /// <summary>
      /// Creates a new notification channel, representing a single notification
      /// endpoint such as an email address, SMS number, or pagerduty service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Monitoring.V3.NotificationChannel> CreateNotificationChannelAsync(global::Google.Cloud.Monitoring.V3.CreateNotificationChannelRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateNotificationChannelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new notification channel, representing a single notification
      /// endpoint such as an email address, SMS number, or pagerduty service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Monitoring.V3.NotificationChannel> CreateNotificationChannelAsync(global::Google.Cloud.Monitoring.V3.CreateNotificationChannelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateNotificationChannel, null, options, request);
      }
      /// <summary>
      /// Updates a notification channel. Fields not specified in the field mask
      /// remain unchanged.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Monitoring.V3.NotificationChannel UpdateNotificationChannel(global::Google.Cloud.Monitoring.V3.UpdateNotificationChannelRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateNotificationChannel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a notification channel. Fields not specified in the field mask
      /// remain unchanged.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Monitoring.V3.NotificationChannel UpdateNotificationChannel(global::Google.Cloud.Monitoring.V3.UpdateNotificationChannelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateNotificationChannel, null, options, request);
      }
      /// <summary>
      /// Updates a notification channel. Fields not specified in the field mask
      /// remain unchanged.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Monitoring.V3.NotificationChannel> UpdateNotificationChannelAsync(global::Google.Cloud.Monitoring.V3.UpdateNotificationChannelRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateNotificationChannelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a notification channel. Fields not specified in the field mask
      /// remain unchanged.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Monitoring.V3.NotificationChannel> UpdateNotificationChannelAsync(global::Google.Cloud.Monitoring.V3.UpdateNotificationChannelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateNotificationChannel, null, options, request);
      }
      /// <summary>
      /// Deletes a notification channel.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteNotificationChannel(global::Google.Cloud.Monitoring.V3.DeleteNotificationChannelRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteNotificationChannel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a notification channel.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteNotificationChannel(global::Google.Cloud.Monitoring.V3.DeleteNotificationChannelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteNotificationChannel, null, options, request);
      }
      /// <summary>
      /// Deletes a notification channel.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteNotificationChannelAsync(global::Google.Cloud.Monitoring.V3.DeleteNotificationChannelRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteNotificationChannelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a notification channel.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteNotificationChannelAsync(global::Google.Cloud.Monitoring.V3.DeleteNotificationChannelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteNotificationChannel, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override NotificationChannelServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new NotificationChannelServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(NotificationChannelServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListNotificationChannelDescriptors, serviceImpl.ListNotificationChannelDescriptors)
          .AddMethod(__Method_GetNotificationChannelDescriptor, serviceImpl.GetNotificationChannelDescriptor)
          .AddMethod(__Method_ListNotificationChannels, serviceImpl.ListNotificationChannels)
          .AddMethod(__Method_GetNotificationChannel, serviceImpl.GetNotificationChannel)
          .AddMethod(__Method_CreateNotificationChannel, serviceImpl.CreateNotificationChannel)
          .AddMethod(__Method_UpdateNotificationChannel, serviceImpl.UpdateNotificationChannel)
          .AddMethod(__Method_DeleteNotificationChannel, serviceImpl.DeleteNotificationChannel).Build();
    }

  }
}
#endregion
